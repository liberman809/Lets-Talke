{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newChat.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { creatNewChat } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { AddUser } from './addUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewChat({\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  async function newChat(e) {\n    try {\n      e.preventDefault();\n      const Nchat = {\n        type: 'privet',\n        creator: user.userId,\n        participants: [...participantsList, user.userId]\n      };\n      const newChat = await creatNewChat(Nchat);\n      const userChats = user.userChats ? user.userChats : [];\n      const updatUserChat = [...userChats, newChat.data._id];\n      const updateChats = {\n        chats: updatUserChat\n      };\n      updateUser(user.userId, updateChats);\n\n      //update members\n      participantsList.forEach(async function (participant) {\n        try {\n          const user = await findUser(participant);\n          const updatUserChat = [...userChats, newChat.data._id];\n          const updateChats = {\n            chats: updatUserChat\n          };\n          updateUser(participant, updateChats);\n        } catch (err) {\n          // console.log(err)\n        }\n      });\n      setMod('chats');\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newChat\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => newGrop(e),\n      className: \"newGroupForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Group description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n        participantsList: participantsList,\n        setParticipants: setParticipants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Creat group'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n}\n_s(NewChat, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = NewChat;\nvar _c;\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"names":["useState","useSelector","findUser","creatNewChat","updateUser","AddUser","jsxDEV","_jsxDEV","NewChat","setMod","_s","user","state","userModule","newChat","e","preventDefault","Nchat","type","creator","userId","participants","participantsList","userChats","updatUserChat","data","_id","updateChats","chats","forEach","participant","err","className","children","onSubmit","newGrop","placeholder","value","groupName","onChange","setGroupName","target","fileName","_jsxFileName","lineNumber","columnNumber","description","setDescription","setParticipants","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newChat.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport{findUser} from '../store/userActions'\r\nimport {creatNewChat} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\nimport {AddUser} from './addUser'\r\n\r\n\r\nexport function NewChat({setMod}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n\r\n\r\n    async function newChat(e){\r\n        try{\r\n            e.preventDefault()\r\n            const Nchat ={\r\n                type: 'privet',\r\n                creator: user.userId,\r\n                participants: [...participantsList,user.userId],\r\n            }\r\n            const newChat =  await creatNewChat(Nchat)\r\n    \r\n            const userChats = (user.userChats)? user.userChats: []\r\n\r\n            const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n            const updateChats = {\r\n                chats:updatUserChat\r\n            }\r\n            updateUser(user.userId,updateChats)\r\n\r\n            //update members\r\n            participantsList.forEach(async function(participant){\r\n                try{\r\n                    const user = await findUser(participant)\r\n                    const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n                    const updateChats = {\r\n                        chats:updatUserChat\r\n                    }\r\n        \r\n                    updateUser(participant,updateChats)\r\n    \r\n                }catch(err){\r\n                    // console.log(err)\r\n                }\r\n\r\n            })\r\n            setMod('chats')\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return <div className=\"newChat\">\r\n        <form onSubmit={(e) => newGrop(e)} className='newGroupForm'>\r\n            <input type='text' placeholder='Group name' value={groupName} onChange={(e) => setGroupName(e.target.value)}></input>\r\n            <textarea placeholder='Group description' value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            <AddUser participantsList={participantsList} setParticipants={setParticipants} />\r\n            <input type='submit' value={'Creat group'}></input>\r\n\r\n        </form>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}