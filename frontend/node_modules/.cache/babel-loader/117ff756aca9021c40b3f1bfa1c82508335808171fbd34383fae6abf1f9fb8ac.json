{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\participant.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { updateChat, resetGroup } from '../store/chatActions';\nimport { updateSomeUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Participant({\n  member,\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const activeChat = useSelector(state => state.chatModule);\n  console.log('new page');\n  async function removeFromGroup(userId, memberChats) {\n    try {\n      const updateParticipantsList = activeChat.participants.filter(participant => participant != userId);\n      const userChatUpdat = memberChats.filter(chat => chat.chatId != activeChat.chatId);\n      const updatParticipants = {\n        participants: updateParticipantsList\n      };\n      const updatChats = {\n        chats: userChatUpdat\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n      const updateUserChats = await updateSomeUser(userId, updatChats);\n    } catch (err) {}\n  }\n  async function addAsManager() {\n    try {\n      const updateChatManagers = [...activeChat.managers, member._id];\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  async function removeAsManager() {\n    try {\n      const updateChatManagers = activeChat.managers.filter(manager => manager != member._id);\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  function userDetails(userId) {\n    setMod('user');\n    setUserId(userId);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => userDetails(member._id),\n        children: member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: member.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), member.isManager && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), !member.isManager && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantActions\",\n      children: [activeChat.managers.includes(user.userId) && !member.isManager && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => removeFromGroup(member._id, member.chats),\n          children: \"Remove from group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => addAsManager(),\n          children: \"Add as manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), activeChat.managers.includes(user.userId) && member.isManager && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actionButton\",\n        onClick: () => removeAsManager(),\n        children: \"Remove as manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n}\n_s(Participant, \"XCBJpo0PhOq8sSY2JYu6bbEnOGU=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Participant;\nvar _c;\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"names":["useEffect","useState","useSelector","updateChat","resetGroup","updateSomeUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Participant","member","setMod","setUserId","_s","user","state","userModule","activeChat","chatModule","console","log","removeFromGroup","userId","memberChats","updateParticipantsList","participants","filter","participant","userChatUpdat","chat","chatId","updatParticipants","updatChats","chats","updateParticipantsChat","updateUserChats","err","addAsManager","updateChatManagers","managers","_id","removeAsManager","manager","userDetails","className","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","email","isManager","includes","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/participant.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {updateChat,resetGroup} from '../store/chatActions'\r\nimport {updateSomeUser} from '../store/userActions'\r\n\r\nexport function Participant({member,setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n    console.log('new page')\r\n\r\n    async function removeFromGroup(userId,memberChats){\r\n        try{\r\n            const updateParticipantsList = activeChat.participants.filter((participant) => participant !=userId)\r\n            const userChatUpdat = memberChats.filter((chat) => chat.chatId != activeChat.chatId) \r\n\r\n            const updatParticipants = {\r\n                participants: updateParticipantsList \r\n            }\r\n            const updatChats = {\r\n                chats:userChatUpdat\r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n            const updateUserChats =  await updateSomeUser(userId,updatChats)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function addAsManager(){\r\n        try{\r\n            const updateChatManagers = [...activeChat.managers,member._id]\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    async function removeAsManager(){\r\n        try{\r\n            const updateChatManagers = activeChat.managers.filter((manager) => manager != member._id)\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    function userDetails(userId){\r\n        setMod('user') \r\n        setUserId(userId)\r\n    }\r\n\r\n    return <div className='participant'>\r\n        <div className='participantDetails'>\r\n            <div onClick={() => userDetails(member._id)}>{member.name}</div>\r\n            <div>{member.email}</div>\r\n        </div>\r\n            {(member.isManager &&\r\n                <div>Manager</div>\r\n            )}\r\n             {(!member.isManager &&\r\n                <div>Member</div>\r\n            )}\r\n            <div className='participantActions'>\r\n                {((activeChat.managers.includes(user.userId) && !member.isManager) &&\r\n                    <>\r\n                    <button className='actionButton' onClick={() => removeFromGroup(member._id,member.chats)}>Remove from group</button>\r\n                    <button className='actionButton' onClick={() => addAsManager()}>Add as manager</button>\r\n                    </>\r\n                )}\r\n                {((activeChat.managers.includes(user.userId) && member.isManager) &&\r\n                    <button className='actionButton'  onClick={() => removeAsManager()}>Remove as manager</button>\r\n                )}\r\n            </div>\r\n    </div>\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAQC,UAAU,EAACC,UAAU,QAAO,sBAAsB;AAC1D,SAAQC,cAAc,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,OAAO,SAASC,WAAWA,CAAC;EAACC,MAAM;EAACC,MAAM;EAACC;AAAS,CAAC,EAAC;EAAAC,EAAA;EAElD,MAAMC,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EACpD,MAAMC,UAAU,GAAGhB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACG,UAAW,CAAC;EAE1DC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAEvB,eAAeC,eAAeA,CAACC,MAAM,EAACC,WAAW,EAAC;IAC9C,IAAG;MACC,MAAMC,sBAAsB,GAAGP,UAAU,CAACQ,YAAY,CAACC,MAAM,CAAEC,WAAW,IAAKA,WAAW,IAAGL,MAAM,CAAC;MACpG,MAAMM,aAAa,GAAGL,WAAW,CAACG,MAAM,CAAEG,IAAI,IAAKA,IAAI,CAACC,MAAM,IAAIb,UAAU,CAACa,MAAM,CAAC;MAEpF,MAAMC,iBAAiB,GAAG;QACtBN,YAAY,EAAED;MAClB,CAAC;MACD,MAAMQ,UAAU,GAAG;QACfC,KAAK,EAACL;MACV,CAAC;MACD,MAAMM,sBAAsB,GAAG,MAAMhC,UAAU,CAACe,UAAU,CAACa,MAAM,EAACC,iBAAiB,CAAC;MACpF,MAAMI,eAAe,GAAI,MAAM/B,cAAc,CAACkB,MAAM,EAACU,UAAU,CAAC;IACpE,CAAC,QAAMI,GAAG,EAAC,CAAC;EAChB;EAEA,eAAeC,YAAYA,CAAA,EAAE;IACzB,IAAG;MACC,MAAMC,kBAAkB,GAAG,CAAC,GAAGrB,UAAU,CAACsB,QAAQ,EAAC7B,MAAM,CAAC8B,GAAG,CAAC;MAC9D,MAAMT,iBAAiB,GAAG;QACtBQ,QAAQ,EAAED;MACd,CAAC;MACD,MAAMJ,sBAAsB,GAAG,MAAMhC,UAAU,CAACe,UAAU,CAACa,MAAM,EAACC,iBAAiB,CAAC;IACxF,CAAC,QAAMK,GAAG,EAAC,CAAC;EAEhB;EAEA,eAAeK,eAAeA,CAAA,EAAE;IAC5B,IAAG;MACC,MAAMH,kBAAkB,GAAGrB,UAAU,CAACsB,QAAQ,CAACb,MAAM,CAAEgB,OAAO,IAAKA,OAAO,IAAIhC,MAAM,CAAC8B,GAAG,CAAC;MACzF,MAAMT,iBAAiB,GAAG;QACtBQ,QAAQ,EAAED;MACd,CAAC;MACD,MAAMJ,sBAAsB,GAAG,MAAMhC,UAAU,CAACe,UAAU,CAACa,MAAM,EAACC,iBAAiB,CAAC;IACxF,CAAC,QAAMK,GAAG,EAAC,CAAC;EAEhB;EAEA,SAASO,WAAWA,CAACrB,MAAM,EAAC;IACxBX,MAAM,CAAC,MAAM,CAAC;IACdC,SAAS,CAACU,MAAM,CAAC;EACrB;EAEA,oBAAOhB,OAAA;IAAKsC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC/BvC,OAAA;MAAKsC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BvC,OAAA;QAAKwC,OAAO,EAAEA,CAAA,KAAMH,WAAW,CAACjC,MAAM,CAAC8B,GAAG,CAAE;QAAAK,QAAA,EAAEnC,MAAM,CAACqC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChE7C,OAAA;QAAAuC,QAAA,EAAMnC,MAAM,CAAC0C;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACAzC,MAAM,CAAC2C,SAAS,iBACd/C,OAAA;MAAAuC,QAAA,EAAK;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEnB,CAACzC,MAAM,CAAC2C,SAAS,iBAChB/C,OAAA;MAAAuC,QAAA,EAAK;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAErB7C,OAAA;MAAKsC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAC5B5B,UAAU,CAACsB,QAAQ,CAACe,QAAQ,CAACxC,IAAI,CAACQ,MAAM,CAAC,IAAI,CAACZ,MAAM,CAAC2C,SAAS,iBAC7D/C,OAAA,CAAAE,SAAA;QAAAqC,QAAA,gBACAvC,OAAA;UAAQsC,SAAS,EAAC,cAAc;UAACE,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAACX,MAAM,CAAC8B,GAAG,EAAC9B,MAAM,CAACuB,KAAK,CAAE;UAAAY,QAAA,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpH7C,OAAA;UAAQsC,SAAS,EAAC,cAAc;UAACE,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,CAAE;UAAAQ,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACrF,CAAC,EAEJlC,UAAU,CAACsB,QAAQ,CAACe,QAAQ,CAACxC,IAAI,CAACQ,MAAM,CAAC,IAAIZ,MAAM,CAAC2C,SAAS,iBAC5D/C,OAAA;QAAQsC,SAAS,EAAC,cAAc;QAAEE,OAAO,EAAEA,CAAA,KAAML,eAAe,CAAC,CAAE;QAAAI,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AACV;AAACtC,EAAA,CAzEeJ,WAAW;EAAA,QAEVR,WAAW,EACLA,WAAW;AAAA;AAAAsD,EAAA,GAHlB9C,WAAW;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}