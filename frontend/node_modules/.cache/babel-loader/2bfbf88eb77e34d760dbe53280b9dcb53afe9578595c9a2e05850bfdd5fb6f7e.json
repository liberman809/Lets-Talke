{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatHeader({\n  chat,\n  mod,\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [founder, setFounder] = useState('');\n  const [managers, setManagers] = useState([]);\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    if (chat.type == 'group') setGroup(chat.founder);\n  }, [chat]);\n  async function setGroup(founderId) {\n    try {\n      const usersIds = [founderId, ...chat.managers, ...chat.participants];\n\n      // יוצרים מערך של כל הבקשות (Promises)\n      const users = await Promise.all(usersIds.map(id => findUser(id)));\n\n      // ממפים את התוצאות למילון של {userId: userName}\n      const usersById = users.reduce((acc, user) => {\n        acc[user._id] = user.name;\n        return acc;\n      }, {});\n\n      // מעדכנים את המשתנים (founder, managers, members) לפי המילון שנוצר\n      setFounder(usersById[founderId]);\n      setManagers(chat.managers.map(managerId => usersById[managerId]));\n      setMembers(chat.participants.map(memberId => usersById[memberId]));\n    } catch (err) {}\n  }\n  function changeMod() {\n    if (mod === 'chat') {\n      if (chat.type === 'group') {\n        setMod('chatManage');\n      } else {\n        var _chat$participants$fi;\n        setMod('user');\n        const userId = (_chat$participants$fi = chat.participants.find(participant => participant.id !== user.userId)) === null || _chat$participants$fi === void 0 ? void 0 : _chat$participants$fi.id;\n        if (userId) {\n          setUserId(userId);\n        }\n      }\n    } else {\n      setMod('chat');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chat.chatName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.chatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatManageHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          children: [\"founder: \", founder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatManagers\",\n          children: [\"managers:\", managers.map(manager => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HedaerUser\",\n              children: manager\n            }, manager, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMembers\",\n        children: [\"members:\", members.map(member => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"HedaerUser\",\n            children: member\n          }, member, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 40\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this) : typeof chat.chatName == 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.participants[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 58\n    }, this)\n  }, void 0, false);\n}\n_s(ChatHeader, \"f+KAdYTywHIGFlUM4uM3ZQJ23EM=\", false, function () {\n  return [useSelector];\n});\n_c = ChatHeader;\nvar _c;\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHeader","chat","mod","setMod","setUserId","_s","user","state","userModule","founder","setFounder","managers","setManagers","members","setMembers","type","setGroup","founderId","usersIds","participants","users","Promise","all","map","id","usersById","reduce","acc","_id","name","managerId","memberId","err","changeMod","_chat$participants$fi","userId","find","participant","children","chatName","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","manager","member","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatHeader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {findUser} from '../store/userActions'\r\n\r\nexport function ChatHeader({chat,mod,setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n    const [founder, setFounder] = useState('')\r\n    const [managers,setManagers] = useState([])\r\n    const [members,setMembers] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if(chat.type == 'group') setGroup(chat.founder)\r\n    },[chat])\r\n\r\n\r\n    async function setGroup(founderId){\r\n        try {\r\n            const usersIds = [founderId, ...chat.managers, ...chat.participants];\r\n            \r\n            // יוצרים מערך של כל הבקשות (Promises)\r\n            const users = await Promise.all(usersIds.map(id => findUser(id)));\r\n            \r\n            // ממפים את התוצאות למילון של {userId: userName}\r\n            const usersById = users.reduce((acc, user) => {\r\n                acc[user._id] = user.name;\r\n                return acc;\r\n            }, {});\r\n            \r\n            // מעדכנים את המשתנים (founder, managers, members) לפי המילון שנוצר\r\n            setFounder(usersById[founderId]);\r\n            setManagers(chat.managers.map(managerId => usersById[managerId]));\r\n            setMembers(chat.participants.map(memberId => usersById[memberId]));\r\n        }catch(err){}\r\n    }\r\n\r\n    function changeMod(){\r\n        if(mod === 'chat'){\r\n            if(chat.type === 'group'){\r\n                setMod('chatManage')\r\n            }else{\r\n                setMod('user') \r\n                const userId = chat.participants.find(participant => participant.id !== user.userId)?.id;\r\n                if (userId) {\r\n                    setUserId(userId);\r\n                }            }\r\n        }else{\r\n            setMod('chat')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {chat.chatName ?(<div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.chatName}</div>\r\n                <div className='chatManageHeader'>\r\n                    <div className='HedaerUser'>founder: {founder}</div>\r\n                    <div className='chatManagers'>\r\n                        managers:\r\n                        {\r\n                        managers.map((manager) => {\r\n                                return <div key={manager} className='HedaerUser'>{manager}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='chatMembers'>\r\n                        members:\r\n                        {\r\n                        members.map((member) => {\r\n                                return <div key={member} className='HedaerUser'>{member}</div>\r\n                            })\r\n                        }\r\n                </div>\r\n                </div>) :\r\n                (typeof(chat.chatName) == 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.participants[0].name}</div>\r\n                </div>)\r\n            }\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}