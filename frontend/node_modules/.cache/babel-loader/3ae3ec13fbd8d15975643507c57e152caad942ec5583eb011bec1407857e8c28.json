{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newGroup.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { AddToGroup } from './addToGroup';\nimport { creatNewChat } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { UserFound } from './userFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewGroup({\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [groupName, setGroupName] = useState('');\n  const [description, setDescription] = useState('');\n  const [email, setEmail] = useState('');\n  const [participantsList, setParticipants] = useState([]);\n  const [userFound, setUserFound] = useState('');\n  console.log('userFound', userFound);\n  async function searchUsser() {\n    try {\n      const user = await findUser(email);\n      setUserFound({\n        id: user._id,\n        name: user.name\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function newGrop(e) {\n    try {\n      e.preventDefault();\n      const Ngroup = {\n        type: 'group',\n        creator: user.userId,\n        name: groupName,\n        participants: [...participantsList, user.userId],\n        managers: [user.userId],\n        description: description\n      };\n      const newChat = await creatNewChat(Ngroup);\n      const userChats = user.userChats ? user.userChats : [];\n      const updatUserChat = [...userChats, newChat.data._id];\n      const updateChats = {\n        chats: updatUserChat\n      };\n      updateUser(user.userId, updateChats);\n\n      //update members\n      participantsList.forEach(async function (participant) {\n        try {\n          const user = await findUser(participant);\n          const updatUserChat = [...userChats, newChat.data._id];\n          const updateChats = {\n            chats: updatUserChat\n          };\n          updateUser(participant, updateChats);\n        } catch (err) {\n          // console.log(err)\n        }\n      });\n      setMod('chats');\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newGroup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => newGrop(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Group description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"look for user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: 'search',\n        onClick: () => searchUsser()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserFound, {\n        userFound: userFound,\n        participantsList: participantsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddToGroup, {\n        participants: participantsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Creat group'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 12\n  }, this);\n}\n_s(NewGroup, \"tTfNMq3utFD5VtoSL4P7fWstESk=\", false, function () {\n  return [useSelector];\n});\n_c = NewGroup;\nvar _c;\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"names":["useState","useSelector","findUser","AddToGroup","creatNewChat","updateUser","UserFound","jsxDEV","_jsxDEV","NewGroup","setMod","_s","user","state","userModule","groupName","setGroupName","description","setDescription","email","setEmail","participantsList","setParticipants","userFound","setUserFound","console","log","searchUsser","id","_id","name","err","newGrop","e","preventDefault","Ngroup","type","creator","userId","participants","managers","newChat","userChats","updatUserChat","data","updateChats","chats","forEach","participant","className","children","onSubmit","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newGroup.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport{findUser} from '../store/userActions'\r\nimport {AddToGroup} from './addToGroup'\r\nimport {creatNewChat} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\nimport {UserFound} from './userFound'\r\n\r\n\r\nexport function NewGroup({setMod}){\r\n    const user = useSelector(state => state.userModule )\r\n\r\n    const [groupName,setGroupName] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [participantsList,setParticipants] = useState([])    \r\n\r\n    const [userFound,setUserFound] = useState('')\r\n\r\n    console.log('userFound',userFound)\r\n\r\n    async function searchUsser() {\r\n        try{\r\n            const user = await findUser(email)\r\n            setUserFound({id:user._id,name:user.name})\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    async function newGrop(e){\r\n        try{\r\n            e.preventDefault()\r\n            const Ngroup ={\r\n                type: 'group',\r\n                creator: user.userId,\r\n                name: groupName,\r\n                participants: [...participantsList,user.userId],\r\n                managers: [user.userId],\r\n                description: description\r\n            }\r\n            const newChat =  await creatNewChat(Ngroup)\r\n    \r\n            const userChats = (user.userChats)? user.userChats: []\r\n\r\n            const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n            const updateChats = {\r\n                chats:updatUserChat\r\n            }\r\n            updateUser(user.userId,updateChats)\r\n\r\n            //update members\r\n            participantsList.forEach(async function(participant){\r\n                try{\r\n                    const user = await findUser(participant)\r\n                    const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n                    const updateChats = {\r\n                        chats:updatUserChat\r\n                    }\r\n        \r\n                    updateUser(participant,updateChats)\r\n    \r\n                }catch(err){\r\n                    // console.log(err)\r\n                }\r\n\r\n            })\r\n            setMod('chats')\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className='newGroup'>\r\n        <form onSubmit={(e) => newGrop(e)}>\r\n            <input type='text' placeholder='Group name' value={groupName} onChange={(e) => setGroupName(e.target.value)}></input>\r\n            <textarea placeholder='Group description' value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            <div>look for user</div>\r\n            <input type='text' placeholder='Email' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <input type='button' value={'search'} onClick={() => searchUsser()}></input>\r\n            <UserFound userFound={userFound} participantsList={participantsList} />\r\n            <AddToGroup participants={participantsList} />\r\n            <input type='submit' value={'Creat group'}></input>\r\n    \r\n        </form>\r\n    </div>\r\n    \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}