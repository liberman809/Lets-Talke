{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { findUser } from '../store/userActions';\nexport function AddUser({\n  participantsList,\n  setParticipants\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [userFound, setUserFound] = useState();\n  const [participantObj, setParticipantObj] = useState([]);\n  const [loading, setLoading] = useState(false);\n  async function searchUser() {\n    setLoading(true);\n    try {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        // Simple email validation\n        alert('please enter a corect Email');\n        setLoading(false);\n        return;\n      }\n      if (!email.trim()) {\n        alert('Please enter an email address');\n        setLoading(false);\n        return;\n      }\n      const user = await findUser(email);\n      setUserFound(user);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function addUuser() {\n    if (!userFound) return;\n    try {\n      if (!participantsList.includes(userFound._id)) {\n        const updateParticipants = [...participantsList, userFound._id];\n        // setParticipantObj([...participantObj,userFound])\n        setParticipants(updateParticipants);\n      } else {\n        console.log('ghgh');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // return <div className='addUser'>\n  //     <div>Find user</div>\n  //     <input type='text' placeholder='Email' onChange={(e) => setEmail(e.target.value)}></input>\n  //     <input type='button' value={'search'} onClick={() => searchUser()}></input>        \n\n  //     {(userFound &&\n  //         <div className='userFound'>\n  //             <div>Is this who your are looking for?</div>\n  //             <div className='userFdetails'>\n  //                 <div className='userDetails'>\n  //                     <div>{userFound.name}</div>\n  //                     <div>{userFound.email}</div>\n  //                 </div>\n  //                 <div className='addUserAction' onClick={addUuser}>\n  //                 Add to group\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )}\n  //     <div className='participantsList'>\n  //     {\n  //         participantsList.map((participant) =>{\n  //             return <div className='participant' key={participant._id}>\n  //                 <div className='userDetails'>\n  //                     <div>{participant.name}</div>\n  //                     <div>{participant.email}</div>\n  //                 </div>\n  //             </div>\n  //         })\n  //     }\n  //     </div> \n  // </div>\n}\n_s(AddUser, \"e73qAaUXjMrz/ODC47t2VZITPyw=\");\n_c = AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["useState","useEffect","findUser","AddUser","participantsList","setParticipants","_s","email","setEmail","userFound","setUserFound","participantObj","setParticipantObj","loading","setLoading","searchUser","test","alert","trim","user","err","console","log","addUuser","includes","_id","updateParticipants","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/addUser.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport{findUser} from '../store/userActions'\r\n\r\nexport function AddUser({participantsList , setParticipants}){\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [userFound,setUserFound] = useState()\r\n    const [participantObj,setParticipantObj] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    async function searchUser() {\r\n        setLoading(true);\r\n        try{\r\n            if (!/\\S+@\\S+\\.\\S+/.test(email)) { // Simple email validation\r\n                alert('please enter a corect Email')\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            if (!email.trim()) {\r\n                alert('Please enter an email address');\r\n                setLoading(false);\r\n                return;\r\n              }\r\n\r\n            const user = await findUser(email)\r\n            setUserFound(user)\r\n        }catch(err){\r\n            console.log(err)\r\n        }finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function addUuser() {\r\n        if (!userFound) return;\r\n        try{\r\n            if(!participantsList.includes(userFound._id)){\r\n                const updateParticipants = [...participantsList,userFound._id]\r\n                // setParticipantObj([...participantObj,userFound])\r\n                setParticipants(updateParticipants)\r\n            }\r\n            else{\r\n                console.log('ghgh')\r\n            }\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    // return <div className='addUser'>\r\n    //     <div>Find user</div>\r\n    //     <input type='text' placeholder='Email' onChange={(e) => setEmail(e.target.value)}></input>\r\n    //     <input type='button' value={'search'} onClick={() => searchUser()}></input>        \r\n        \r\n    //     {(userFound &&\r\n    //         <div className='userFound'>\r\n    //             <div>Is this who your are looking for?</div>\r\n    //             <div className='userFdetails'>\r\n    //                 <div className='userDetails'>\r\n    //                     <div>{userFound.name}</div>\r\n    //                     <div>{userFound.email}</div>\r\n    //                 </div>\r\n    //                 <div className='addUserAction' onClick={addUuser}>\r\n    //                 Add to group\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     )}\r\n    //     <div className='participantsList'>\r\n    //     {\r\n    //         participantsList.map((participant) =>{\r\n    //             return <div className='participant' key={participant._id}>\r\n    //                 <div className='userDetails'>\r\n    //                     <div>{participant.name}</div>\r\n    //                     <div>{participant.email}</div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         })\r\n    //     }\r\n    //     </div> \r\n    // </div>\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAOC,QAAQ,QAAO,sBAAsB;AAE5C,OAAO,SAASC,OAAOA,CAAC;EAACC,gBAAgB;EAAGC;AAAe,CAAC,EAAC;EAAAC,EAAA;EAEzD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,SAAS,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC3C,MAAM,CAACW,cAAc,EAACC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAG7C,eAAee,UAAUA,CAAA,EAAG;IACxBD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,IAAI,CAAC,cAAc,CAACE,IAAI,CAACT,KAAK,CAAC,EAAE;QAAE;QAC/BU,KAAK,CAAC,6BAA6B,CAAC;QACpCH,UAAU,CAAC,KAAK,CAAC;QACjB;MACJ;MACA,IAAI,CAACP,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;QACfD,KAAK,CAAC,+BAA+B,CAAC;QACtCH,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEF,MAAMK,IAAI,GAAG,MAAMjB,QAAQ,CAACK,KAAK,CAAC;MAClCG,YAAY,CAACS,IAAI,CAAC;IACtB,CAAC,QAAMC,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,SAAO;MACJN,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;EAEA,eAAeS,QAAQA,CAAA,EAAG;IACtB,IAAI,CAACd,SAAS,EAAE;IAChB,IAAG;MACC,IAAG,CAACL,gBAAgB,CAACoB,QAAQ,CAACf,SAAS,CAACgB,GAAG,CAAC,EAAC;QACzC,MAAMC,kBAAkB,GAAG,CAAC,GAAGtB,gBAAgB,EAACK,SAAS,CAACgB,GAAG,CAAC;QAC9D;QACApB,eAAe,CAACqB,kBAAkB,CAAC;MACvC,CAAC,MACG;QACAL,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACvB;IACJ,CAAC,QAAMF,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACd,EAAA,CA/EeH,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}