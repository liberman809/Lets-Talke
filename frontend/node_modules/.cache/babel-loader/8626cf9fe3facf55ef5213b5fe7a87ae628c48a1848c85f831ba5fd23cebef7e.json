{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatHeader({\n  chat,\n  mod,\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [user2, setUser2] = useState('');\n  const [founder, setFounder] = useState('');\n  const [managers, setManagers] = useState([]);\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    if (chat.type == 'group') setGroup(chat.founder);\n  }, [chat]);\n  async function setGroup(founderId) {\n    try {\n      const founder = await findUser(founderId);\n      const founderName = founder.name;\n      setFounder(founderName);\n      const managersNames = [];\n      const membersNames = [];\n      for (let manager in chat.managers) {\n        // console.log(chat.managers)\n        const user = await findUser(chat.managers[manager]);\n        managersNames.push(user.name);\n      }\n      for (let member in chat.participants) {\n        // console.log(chat.managers)\n        const user = await findUser(chat.participants[member]);\n        membersNames.push(user.name);\n      }\n      setManagers(managersNames);\n      setMembers(membersNames);\n    } catch (err) {}\n  }\n  function changeMod() {\n    if (mod == 'chat') {\n      setMod('chatManage');\n    } else {\n      setMod('chat');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof chat.chatName != 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.chatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatManageHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          children: [\"founder: \", founder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatManagers\",\n          children: [\"managers:\", managers.map(manager => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HedaerUser\",\n              children: manager\n            }, manager, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMembers\",\n        children: [\"members:\", members.map(member => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"HedaerUser\",\n            children: member\n          }, member, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 40\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 54\n    }, this), typeof chat.chatName == 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.participants[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 54\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatHeader, \"qz0+sq1u1UPlIUOhgHqWwQUSXHM=\", false, function () {\n  return [useSelector];\n});\n_c = ChatHeader;\nvar _c;\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHeader","chat","mod","setMod","_s","user","state","userModule","user2","setUser2","founder","setFounder","managers","setManagers","members","setMembers","type","setGroup","founderId","founderName","name","managersNames","membersNames","manager","push","member","participants","err","changeMod","children","chatName","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatHeader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {findUser} from '../store/userActions'\r\n\r\nexport function ChatHeader({chat,mod,setMod}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n    const [user2,setUser2] = useState('')\r\n    const [founder, setFounder] = useState('')\r\n    const [managers,setManagers] = useState([])\r\n    const [members,setMembers] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if(chat.type == 'group') setGroup(chat.founder)\r\n    },[chat])\r\n\r\n\r\n    async function setGroup(founderId){\r\n        try{\r\n            const founder = await findUser(founderId)\r\n            const founderName = founder.name\r\n            setFounder(founderName)\r\n            const managersNames = []\r\n            const membersNames = []\r\n            for(let manager in chat.managers){\r\n                // console.log(chat.managers)\r\n                const user = await findUser(chat.managers[manager])\r\n                managersNames.push(user.name)\r\n            }\r\n            for(let member in chat.participants){\r\n                // console.log(chat.managers)\r\n                const user = await findUser(chat.participants[member])\r\n                membersNames.push(user.name)\r\n            }\r\n            setManagers(managersNames)\r\n            setMembers(membersNames)\r\n        }catch(err){}\r\n    }\r\n\r\n    function changeMod(){\r\n        if(mod == 'chat'){\r\n            setMod('chatManage')\r\n        }else{\r\n            setMod('chat')\r\n        }\r\n    }\r\n\r\n    return <>\r\n        {\r\n            (typeof(chat.chatName) != 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.chatName}</div>\r\n                <div className='chatManageHeader'>\r\n                    <div className='HedaerUser'>founder: {founder}</div>\r\n                    <div className='chatManagers'>\r\n                        managers:\r\n                        {\r\n                        managers.map((manager) => {\r\n                                return <div key={manager} className='HedaerUser'>{manager}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='chatMembers'>\r\n                        members:\r\n                        {\r\n                        members.map((member) => {\r\n                                return <div key={member} className='HedaerUser'>{member}</div>\r\n                            })\r\n                        }\r\n                </div>\r\n            </div>)\r\n        }\r\n        {\r\n            (typeof(chat.chatName) == 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.participants[0].name}</div>\r\n            </div>)\r\n        }\r\n    </>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}