{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { NewMsg } from './newMsg';\nimport { ChatHeader } from './chatHeader';\nimport { Message } from './message';\nimport { useEffect, useState } from 'react';\nimport { ChatManage } from './chatManage';\nimport { ChatUserMod } from './chatUserMod';\nimport { joinChat } from '../store/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Chat({\n  mod,\n  setMod\n}) {\n  _s();\n  const activeChat = useSelector(state => state.chatModule);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    if (activeChat.chatId) joinChat(activeChat.chatId);\n  }, [activeChat.chatId]);\n  if (!activeChat.chatId || !activeChat.messages) {\n    return null;\n  }\n  const chat = {\n    chat: `\n            <div className='chatBody'>\n                {((activeChat.messages && mod == 'chat') &&\n                    <>\n                        {activeChat.messages.map((message) =>{\n                            return <Message key={message}  messageId={message} />\n                        })}\n                    </>\n                )}\n            </div>\n            <NewMsg />`,\n    chatManage: `\n            <div className=\"chat\">\n                <ChatManage setMod={setMod} setUserId={setUserId} />\n            </div> `,\n    user: `<ChatUserMod mod={mod} setMod={setMod} userId={userId} />`\n  };\n\n  // if(activeChat.chatId && mod == 'chat' ){\n  //     return <div className=\"chat\">\n  //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} setUserId={setUserId} />\n  //             <div className='chatBody'>\n  //                 {((activeChat.messages && mod == 'chat') &&\n  //                     <>\n  //                         {activeChat.messages.map((message) =>{\n  //                             return <Message key={message}  messageId={message} />\n  //                         })}\n  //                     </>\n  //                 )}\n  //         </div>\n  //         <NewMsg />\n  //     </div>\n  // }else if(activeChat.chatId && mod == 'chatManage' && activeChat.type == 'group'){\n  //     return <div className=\"chat\">\n  //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\n  //         <ChatManage setMod={setMod} setUserId={setUserId} />\n  //     </div> \n  // }else if(activeChat.chatId && mod == 'user' ){\n  //     return <div className=\"chat\">\n  //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\n  //         <ChatUserMod mod={mod} setMod={setMod} userId={userId} />\n  //     </div>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      chat: activeChat,\n      mod: mod,\n      setMod: setMod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), chat[mod]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n}\n_s(Chat, \"947p7GB+lc8TYDj4bT8jand6oc0=\", false, function () {\n  return [useSelector];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useSelector","NewMsg","ChatHeader","Message","useEffect","useState","ChatManage","ChatUserMod","joinChat","jsxDEV","_jsxDEV","Chat","mod","setMod","_s","activeChat","state","chatModule","userId","setUserId","chatId","messages","chat","chatManage","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chat.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport {NewMsg} from './newMsg'\r\nimport {ChatHeader} from './chatHeader'\r\nimport {Message} from './message'\r\nimport { useEffect, useState } from 'react'\r\nimport {ChatManage} from './chatManage'\r\nimport {ChatUserMod} from './chatUserMod'\r\nimport {joinChat} from '../store/socket'\r\n\r\n\r\nexport function Chat({mod,setMod}){\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n    const [userId,setUserId] = useState()\r\n\r\n    useEffect(() =>{\r\n        if(activeChat.chatId) joinChat(activeChat.chatId)\r\n    },[activeChat.chatId])\r\n\r\n    if (!activeChat.chatId || !activeChat.messages) {\r\n        return null\r\n    }\r\n\r\n\r\n    const chat ={\r\n        chat: `\r\n            <div className='chatBody'>\r\n                {((activeChat.messages && mod == 'chat') &&\r\n                    <>\r\n                        {activeChat.messages.map((message) =>{\r\n                            return <Message key={message}  messageId={message} />\r\n                        })}\r\n                    </>\r\n                )}\r\n            </div>\r\n            <NewMsg />`\r\n        ,\r\n        chatManage:`\r\n            <div className=\"chat\">\r\n                <ChatManage setMod={setMod} setUserId={setUserId} />\r\n            </div> `\r\n        ,\r\n        user: `<ChatUserMod mod={mod} setMod={setMod} userId={userId} />`\r\n    }\r\n\r\n    // if(activeChat.chatId && mod == 'chat' ){\r\n    //     return <div className=\"chat\">\r\n    //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} setUserId={setUserId} />\r\n    //             <div className='chatBody'>\r\n    //                 {((activeChat.messages && mod == 'chat') &&\r\n    //                     <>\r\n    //                         {activeChat.messages.map((message) =>{\r\n    //                             return <Message key={message}  messageId={message} />\r\n    //                         })}\r\n    //                     </>\r\n    //                 )}\r\n    //         </div>\r\n    //         <NewMsg />\r\n    //     </div>\r\n    // }else if(activeChat.chatId && mod == 'chatManage' && activeChat.type == 'group'){\r\n    //     return <div className=\"chat\">\r\n    //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\r\n    //         <ChatManage setMod={setMod} setUserId={setUserId} />\r\n    //     </div> \r\n    // }else if(activeChat.chatId && mod == 'user' ){\r\n    //     return <div className=\"chat\">\r\n    //         <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\r\n    //         <ChatUserMod mod={mod} setMod={setMod} userId={userId} />\r\n    //     </div>\r\n    // }\r\n\r\n    return <div className='chat'>\r\n        <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\r\n        {chat[mod]}\r\n    </div>\r\n    \r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAAQC,MAAM,QAAO,UAAU;AAC/B,SAAQC,UAAU,QAAO,cAAc;AACvC,SAAQC,OAAO,QAAO,WAAW;AACjC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,UAAU,QAAO,cAAc;AACvC,SAAQC,WAAW,QAAO,eAAe;AACzC,SAAQC,QAAQ,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,OAAO,SAASC,IAAIA,CAAC;EAACC,GAAG;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAC9B,MAAMC,UAAU,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAE1D,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAK;IACX,IAAGW,UAAU,CAACK,MAAM,EAAEZ,QAAQ,CAACO,UAAU,CAACK,MAAM,CAAC;EACrD,CAAC,EAAC,CAACL,UAAU,CAACK,MAAM,CAAC,CAAC;EAEtB,IAAI,CAACL,UAAU,CAACK,MAAM,IAAI,CAACL,UAAU,CAACM,QAAQ,EAAE;IAC5C,OAAO,IAAI;EACf;EAGA,MAAMC,IAAI,GAAE;IACRA,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;IAEfC,UAAU,EAAC;AACnB;AACA;AACA,oBAAoB;IAEZC,IAAI,EAAE;EACV,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOd,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACxBhB,OAAA,CAACR,UAAU;MAACoB,IAAI,EAAEP,UAAW;MAACH,GAAG,EAAEA,GAAI;MAACC,MAAM,EAAEA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDR,IAAI,CAACV,GAAG,CAAC;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAChB,EAAA,CAlEeH,IAAI;EAAA,QACGX,WAAW;AAAA;AAAA+B,EAAA,GADlBpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}