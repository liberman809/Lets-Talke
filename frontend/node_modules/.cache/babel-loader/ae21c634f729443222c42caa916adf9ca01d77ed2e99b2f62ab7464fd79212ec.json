{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatHeader({\n  chat\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [user2, setUser2] = useState('');\n  const [founder, setFounder] = useState('');\n  const [managers, setManagers] = useState([]);\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    if (chat.type == 'privet') {\n      const user2Id = chat.participants.filter(participant => participant != user.userId);\n      findUser2(user2Id);\n    } else {\n      setGroup(chat.founder);\n    }\n  }, []);\n  async function findUser2(id) {\n    try {\n      const user = await findUser(id);\n      console.log('user', user);\n      setUser2(user.name);\n    } catch (err) {}\n  }\n  async function setGroup(founderId) {\n    try {\n      const founder = await findUser(founderId);\n      const founderName = founder.name;\n      setFounder(founderName);\n      const managersNames = [];\n      const membersNames = [];\n      for (let manager in chat.managers) {\n        // console.log(chat.managers)\n        const user = await findUser(chat.managers[manager]);\n        managersNames.push(user.name);\n      }\n      for (let member in chat.participants) {\n        // console.log(chat.managers)\n        const user = await findUser(chat.participants[member]);\n        membersNames.push(user.name);\n      }\n      setManagers(managersNames);\n      setMembers(membersNames);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof chat.chatName != 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        children: chat.chatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatManage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          children: [\"founder: \", founder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatManagers\",\n          children: [\"managers:\", managers.map(manager => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HedaerUser\",\n              children: manager\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMembers\",\n        children: [\"members:\", members.map(member => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"HedaerUser\",\n            children: member\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 40\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 54\n    }, this), typeof chat.chatName == 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: user2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 54\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatHeader, \"qz0+sq1u1UPlIUOhgHqWwQUSXHM=\", false, function () {\n  return [useSelector];\n});\n_c = ChatHeader;\nvar _c;\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHeader","chat","_s","user","state","userModule","user2","setUser2","founder","setFounder","managers","setManagers","members","setMembers","type","user2Id","participants","filter","participant","userId","findUser2","setGroup","id","console","log","name","err","founderId","founderName","managersNames","membersNames","manager","push","member","children","chatName","className","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatHeader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {findUser} from '../store/userActions'\r\n\r\nexport function ChatHeader({chat}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n    const [user2,setUser2] = useState('')\r\n    const [founder, setFounder] = useState('')\r\n    const [managers,setManagers] = useState([])\r\n    const [members,setMembers] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(chat.type == 'privet'){\r\n            const user2Id = chat.participants.filter((participant) => participant != user.userId)\r\n            findUser2(user2Id)\r\n        }else{\r\n            setGroup(chat.founder)\r\n        }\r\n    },[])\r\n\r\n    async function findUser2(id) {\r\n        try{\r\n            const user = await findUser(id)\r\n            console.log('user',user)\r\n            setUser2(user.name)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function setGroup(founderId){\r\n        try{\r\n            const founder = await findUser(founderId)\r\n            const founderName = founder.name\r\n            setFounder(founderName)\r\n\r\n            const managersNames = []\r\n            const membersNames = []\r\n\r\n\r\n            for(let manager in chat.managers){\r\n                // console.log(chat.managers)\r\n                const user = await findUser(chat.managers[manager])\r\n                managersNames.push(user.name)\r\n            }\r\n\r\n            for(let member in chat.participants){\r\n                // console.log(chat.managers)\r\n                const user = await findUser(chat.participants[member])\r\n                membersNames.push(user.name)\r\n            }\r\n\r\n\r\n            setManagers(managersNames)\r\n            setMembers(membersNames)\r\n\r\n        }catch(err){}\r\n    }\r\n\r\n\r\n    return <>\r\n        {\r\n            (typeof(chat.chatName) != 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName'>{chat.chatName}</div>\r\n                <div className='chatManage'>\r\n                    <div className='HedaerUser'>founder: {founder}</div>\r\n                    <div className='chatManagers'>\r\n                        managers:\r\n                        {\r\n                        managers.map((manager) => {\r\n                                return <div className='HedaerUser'>{manager}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='chatMembers'>\r\n                        members:\r\n                        {\r\n                        members.map((member) => {\r\n                                return <div className='HedaerUser'>{member}</div>\r\n                            })\r\n                        }\r\n\r\n                </div>\r\n            </div>)\r\n        }\r\n        {\r\n            (typeof(chat.chatName) == 'undefined' && <div className='chatHeader'>\r\n                {\r\n                    user2\r\n                }\r\n            </div>)\r\n        }\r\n\r\n    </>\r\n\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}