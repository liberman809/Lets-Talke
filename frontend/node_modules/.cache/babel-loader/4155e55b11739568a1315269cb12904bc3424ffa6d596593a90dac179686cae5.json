{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatManage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { AddUser } from './addUser';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatManage() {\n  _s();\n  const activeChat = useSelector(state => state.chatModule);\n  const [participantsList, setParticipants] = useState([]);\n  console.log('participantsList', activeChat.participants);\n  useEffect(() => {\n    getMmbers();\n  }, []);\n  async function getMmbers() {\n    try {\n      const membersNames = [];\n      for (let member in activeChat.participants) {\n        // console.log(chat.managers)\n        const user = await findUser(activeChat.participants[member]);\n        membersNames.push(user.name);\n      }\n      setParticipants(membersNames);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: activeChat.type == 'group' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddUser, {\n        participantsList: participantsList,\n        setParticipants: setParticipants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), participantsList.map(member => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          children: member\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatManage, \"L76nUfRp7NI6OC8iLuJ1RhThyfo=\", false, function () {\n  return [useSelector];\n});\n_c = ChatManage;\nvar _c;\n$RefreshReg$(_c, \"ChatManage\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","AddUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatManage","_s","activeChat","state","chatModule","participantsList","setParticipants","console","log","participants","getMmbers","membersNames","member","user","push","name","err","children","type","fileName","_jsxFileName","lineNumber","columnNumber","map","className","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatManage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {findUser} from '../store/userActions'\r\nimport {AddUser} from './addUser'\r\n\r\nexport function ChatManage(){\r\n\r\n    const activeChat = useSelector(state => state.chatModule )\r\n    const [participantsList,setParticipants] = useState([])  \r\n\r\n    console.log('participantsList',activeChat.participants)\r\n\r\n    useEffect(() =>{\r\n        getMmbers()\r\n    },[])\r\n\r\n\r\n    async function getMmbers(){\r\n        try{\r\n            const membersNames = []\r\n            for(let member in activeChat.participants){\r\n                // console.log(chat.managers)\r\n                const user = await findUser(activeChat.participants[member])\r\n                membersNames.push(user.name)\r\n            }\r\n            setParticipants(membersNames)\r\n        }catch(err){}\r\n    }\r\n\r\n\r\n    return <div>\r\n        {(activeChat.type == 'group' &&\r\n            <>\r\n            <AddUser participantsList={participantsList} setParticipants={setParticipants} />\r\n            {            \r\n                participantsList.map((member) => {\r\n                    return <div className='HedaerUser'>{member}</div>\r\n                })     \r\n            }\r\n            </>\r\n        )}\r\n    </div>\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAQC,QAAQ,QAAO,sBAAsB;AAC7C,SAAQC,OAAO,QAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,OAAO,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAExB,MAAMC,UAAU,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAC1D,MAAM,CAACC,gBAAgB,EAACC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEvDe,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACN,UAAU,CAACO,YAAY,CAAC;EAEvDlB,SAAS,CAAC,MAAK;IACXmB,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAGL,eAAeA,SAASA,CAAA,EAAE;IACtB,IAAG;MACC,MAAMC,YAAY,GAAG,EAAE;MACvB,KAAI,IAAIC,MAAM,IAAIV,UAAU,CAACO,YAAY,EAAC;QACtC;QACA,MAAMI,IAAI,GAAG,MAAMnB,QAAQ,CAACQ,UAAU,CAACO,YAAY,CAACG,MAAM,CAAC,CAAC;QAC5DD,YAAY,CAACG,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC;MAChC;MACAT,eAAe,CAACK,YAAY,CAAC;IACjC,CAAC,QAAMK,GAAG,EAAC,CAAC;EAChB;EAGA,oBAAOnB,OAAA;IAAAoB,QAAA,EACDf,UAAU,CAACgB,IAAI,IAAI,OAAO,iBACxBrB,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACApB,OAAA,CAACF,OAAO;QAACU,gBAAgB,EAAEA,gBAAiB;QAACC,eAAe,EAAEA;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE7EjB,gBAAgB,CAACkB,GAAG,CAAEX,MAAM,IAAK;QAC7B,oBAAOf,OAAA;UAAK2B,SAAS,EAAC,YAAY;UAAAP,QAAA,EAAEL;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MACrD,CAAC,CAAC;IAAA,eAEJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AACV;AAACrB,EAAA,CArCeD,UAAU;EAAA,QAEHP,WAAW;AAAA;AAAAgC,EAAA,GAFlBzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}