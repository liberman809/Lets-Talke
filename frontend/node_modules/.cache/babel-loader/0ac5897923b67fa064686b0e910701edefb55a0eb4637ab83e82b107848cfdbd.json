{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatManage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { AddUser } from './addUser';\nimport { updateChat, resetGroup } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatManage({\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const activeChat = useSelector(state => state.chatModule);\n  const [participantsList, setParticipants] = useState([]);\n  console.log('participantsList');\n  useEffect(() => {\n    getMmbers();\n  }, []);\n  async function getMmbers() {\n    try {\n      const membersNames = [];\n      for (let member in activeChat.participants) {\n        const user = await findUser(activeChat.participants[member]);\n        let isManager = false;\n        if (activeChat.managers.includes(user._id)) isManager = true;\n        console.log('user', user);\n        membersNames.push(user);\n      }\n      setParticipants(membersNames);\n    } catch (err) {}\n  }\n  async function leaveGroup() {\n    try {\n      const participantsListUpdat = activeChat.participants.filter(participant => participant != user.userId);\n      let managersUpdat;\n      if (activeChat.managers.includes(user.userId) && participantsListUpdat.length != 0) {\n        managersUpdat = activeChat.managers.filter(manager => manager != user.userId);\n        if (managersUpdat.length == 0) {\n          managersUpdat.push(activeChat.participants[0]);\n        }\n      }\n      //update user\n      const userChatUpdat = user.userChats.filter(chat => chat.chatId != activeChat.chatId);\n      const updatParticipants = {\n        participants: participantsListUpdat\n      };\n      const updatManagers = {\n        managers: managersUpdat\n      };\n      const updatChats = {\n        chats: userChatUpdat\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n      const updatChatManagers = await updateChat(activeChat.chatId, updatManagers);\n      const updateUserChats = await updateUser(user.userId, updatChats);\n      resetGroup();\n      setMod('chat');\n    } catch (err) {}\n  }\n  async function removeFromGroup(userId, memberChats) {\n    try {\n      console.log('memberChats', memberChats);\n      const updateParticipantsList = activeChat.participants.filter(participant => participant != userId);\n      const userChatUpdat = memberChats.filter(chat => chat.chatId != activeChat.chatId);\n      const updatParticipants = {\n        participants: updateParticipantsList\n      };\n      const updatChats = {\n        chats: userChatUpdat\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n      const updateUserChats = await updateUser(userId, updatChats);\n      console.log('userId', updateParticipantsList);\n      // setParticipants\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [activeChat.type == 'group' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupDescription\",\n        children: activeChat.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), activeChat.managers.includes(user.userId) && /*#__PURE__*/_jsxDEV(AddUser, {\n        participantsList: participantsList,\n        setParticipants: setParticipants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), participantsList.map(member => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: member.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), member.isManager && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), activeChat.managers.includes(user.userId) && !member.isManager && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromGroup(member._id, member.chats),\n              children: \"Remove from group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupActions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => leaveGroup(),\n        children: \"leave group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"By clicking you will leave the group and it will be deleted from your chat list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatManage, \"941KiScBjHUQ87cIh0vKh5DGuLc=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = ChatManage;\nvar _c;\n$RefreshReg$(_c, \"ChatManage\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","AddUser","updateChat","resetGroup","updateUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatManage","setMod","_s","user","state","userModule","activeChat","chatModule","participantsList","setParticipants","console","log","getMmbers","membersNames","member","participants","isManager","managers","includes","_id","push","err","leaveGroup","participantsListUpdat","filter","participant","userId","managersUpdat","length","manager","userChatUpdat","userChats","chat","chatId","updatParticipants","updatManagers","updatChats","chats","updateParticipantsChat","updatChatManagers","updateUserChats","removeFromGroup","memberChats","updateParticipantsList","children","type","className","description","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatManage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {findUser} from '../store/userActions'\r\nimport {AddUser} from './addUser'\r\n\r\nimport {updateChat,resetGroup} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\n\r\nexport function ChatManage({setMod}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n    const activeChat = useSelector(state => state.chatModule )\r\n    const [participantsList,setParticipants] = useState([])  \r\n\r\n    console.log('participantsList',)\r\n\r\n    useEffect(() =>{\r\n        getMmbers()\r\n    },[])\r\n\r\n    async function getMmbers(){\r\n        try{\r\n            const membersNames = []\r\n            for(let member in activeChat.participants){\r\n                const user = await findUser(activeChat.participants[member])\r\n                let isManager = false\r\n                if(activeChat.managers.includes(user._id)) isManager = true\r\n                console.log('user',user)\r\n                membersNames.push(user)\r\n            }\r\n            setParticipants(membersNames)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function leaveGroup() {\r\n        try{\r\n            const participantsListUpdat =  activeChat.participants.filter((participant) => participant != user.userId)\r\n            let managersUpdat\r\n            if(activeChat.managers.includes(user.userId) && participantsListUpdat.length != 0){\r\n                managersUpdat = activeChat.managers.filter((manager) => manager !=user.userId)\r\n                if(managersUpdat.length  == 0){\r\n                    managersUpdat.push(activeChat.participants[0])\r\n                }\r\n            }\r\n            //update user\r\n            const userChatUpdat = user.userChats.filter((chat) => chat.chatId != activeChat.chatId) \r\n    \r\n            const updatParticipants = {\r\n                participants:participantsListUpdat\r\n            }\r\n            const updatManagers = {\r\n                managers:managersUpdat\r\n            }\r\n            const updatChats = {\r\n                chats:userChatUpdat\r\n            }\r\n    \r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n            const updatChatManagers = await updateChat(activeChat.chatId,updatManagers)\r\n            const updateUserChats =  await updateUser(user.userId,updatChats)\r\n            resetGroup()\r\n            setMod('chat')\r\n        }catch(err){}\r\n    }\r\n\r\n    async function removeFromGroup(userId,memberChats){\r\n        try{\r\n\r\n            console.log('memberChats',memberChats)\r\n            const updateParticipantsList = activeChat.participants.filter((participant) => participant !=userId)\r\n            const userChatUpdat = memberChats.filter((chat) => chat.chatId != activeChat.chatId) \r\n\r\n            const updatParticipants = {\r\n                participants: updateParticipantsList \r\n            }\r\n            const updatChats = {\r\n                chats:userChatUpdat\r\n            }\r\n\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n            const updateUserChats =  await updateUser(userId,updatChats)\r\n\r\n            console.log( 'userId',updateParticipantsList)\r\n            // setParticipants\r\n\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    return <div>\r\n        {(activeChat.type == 'group' &&\r\n            <>\r\n            <div className='groupDescription'>\r\n                {activeChat.description}\r\n            </div>\r\n            {(activeChat.managers.includes(user.userId) &&\r\n                <AddUser participantsList={participantsList} setParticipants={setParticipants} />\r\n            )}\r\n            {            \r\n                participantsList.map((member) => {\r\n                    return <div className='HedaerUser'>\r\n                        <div>{member.name}</div>\r\n                        {(member.isManager &&\r\n                            <div>Manager</div>\r\n                        )}\r\n                        {((activeChat.managers.includes(user.userId) && !member.isManager) &&\r\n                            <div>\r\n                                <button onClick={() => removeFromGroup(member._id,member.chats)}>Remove from group</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                })     \r\n            }\r\n            </>\r\n        )}\r\n\r\n        <div className='groupActions'>\r\n            <button onClick={() => leaveGroup()}>leave group</button>\r\n            <div>By clicking you will leave the group and it will be deleted from your chat list</div>\r\n        </div>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}