{"ast":null,"code":"import axios from 'axios';\nimport { store } from './store.js';\nimport { SET_USERID, SET_USERNAME, SET_USEREMAIL, SET_USERCHATS } from './userReducer.js';\nexport async function newUser(user) {\n  try {\n    const newUser = await axios.post(`http://localhost:3030/api/auth/signup`, user);\n    if (newUser.status == '200') store.dispatch({\n      type: SET_USERID,\n      userId: newUser.data.newUser._id\n    });\n    store.dispatch({\n      type: SET_USERNAME,\n      userName: newUser.data.newUser.name\n    });\n    store.dispatch({\n      type: SET_USEREMAIL,\n      userEmail: newUser.data.newUser.email\n    });\n    store.dispatch({\n      type: SET_USERCHATS,\n      userId: newUser.data.newUser.chats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function logIn(user) {\n  try {\n    const logInUser = await axios.post(`http://localhost:3030/api/auth/logIn`, user);\n    if (logInUser.status == '200') store.dispatch({\n      type: SET_USERID,\n      userId: logInUser.data.userLogIn._id\n    });\n    store.dispatch({\n      type: SET_USERNAME,\n      userName: logInUser.data.userLogIn.name\n    });\n    store.dispatch({\n      type: SET_USEREMAIL,\n      userEmail: logInUser.data.userLogIn.email\n    });\n    store.dispatch({\n      type: SET_USERCHATS,\n      userId: logInUser.data.userLogIn.chats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}","map":{"version":3,"names":["axios","store","SET_USERID","SET_USERNAME","SET_USEREMAIL","SET_USERCHATS","newUser","user","post","status","dispatch","type","userId","data","_id","userName","name","userEmail","email","chats","err","console","log","logIn","logInUser","userLogIn"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/userActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { store } from './store.js'\r\nimport { SET_USERID,SET_USERNAME,SET_USEREMAIL,SET_USERCHATS } from './userReducer.js'\r\n\r\n\r\nexport async function newUser(user) {\r\n    try{\r\n        const newUser = await axios.post(`http://localhost:3030/api/auth/signup`,user)\r\n        if(newUser.status == '200')\r\n        store.dispatch({\r\n            type: SET_USERID,\r\n            userId: newUser.data.newUser._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERNAME,\r\n            userName: newUser.data.newUser.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_USEREMAIL,\r\n            userEmail: newUser.data.newUser.email\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userId: newUser.data.newUser.chats\r\n        })\r\n\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n    \r\n}\r\n\r\nexport async function logIn(user) {\r\n    try{\r\n        const logInUser = await axios.post(`http://localhost:3030/api/auth/logIn`,user)\r\n        if(logInUser.status == '200')\r\n        store.dispatch({\r\n            type: SET_USERID,\r\n            userId: logInUser.data.userLogIn._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERNAME,\r\n            userName: logInUser.data.userLogIn.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_USEREMAIL,\r\n            userEmail: logInUser.data.userLogIn.email\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userId: logInUser.data.userLogIn.chats\r\n        })\r\n\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n    \r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,EAACC,YAAY,EAACC,aAAa,EAACC,aAAa,QAAQ,kBAAkB;AAGtF,OAAO,eAAeC,OAAOA,CAACC,IAAI,EAAE;EAChC,IAAG;IACC,MAAMD,OAAO,GAAG,MAAMN,KAAK,CAACQ,IAAI,CAAC,uCAAuC,EAACD,IAAI,CAAC;IAC9E,IAAGD,OAAO,CAACG,MAAM,IAAI,KAAK,EAC1BR,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAET,UAAU;MAChBU,MAAM,EAAEN,OAAO,CAACO,IAAI,CAACP,OAAO,CAACQ;IACjC,CAAC,CAAC;IACFb,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAER,YAAY;MAClBY,QAAQ,EAAET,OAAO,CAACO,IAAI,CAACP,OAAO,CAACU;IACnC,CAAC,CAAC;IACFf,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAEP,aAAa;MACnBa,SAAS,EAAEX,OAAO,CAACO,IAAI,CAACP,OAAO,CAACY;IACpC,CAAC,CAAC;IACFjB,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAEN,aAAa;MACnBO,MAAM,EAAEN,OAAO,CAACO,IAAI,CAACP,OAAO,CAACa;IACjC,CAAC,CAAC;EAGN,CAAC,QAAMC,GAAG,EAAC;IACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AAEJ;AAEA,OAAO,eAAeG,KAAKA,CAAChB,IAAI,EAAE;EAC9B,IAAG;IACC,MAAMiB,SAAS,GAAG,MAAMxB,KAAK,CAACQ,IAAI,CAAC,sCAAsC,EAACD,IAAI,CAAC;IAC/E,IAAGiB,SAAS,CAACf,MAAM,IAAI,KAAK,EAC5BR,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAET,UAAU;MAChBU,MAAM,EAAEY,SAAS,CAACX,IAAI,CAACY,SAAS,CAACX;IACrC,CAAC,CAAC;IACFb,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAER,YAAY;MAClBY,QAAQ,EAAES,SAAS,CAACX,IAAI,CAACY,SAAS,CAACT;IACvC,CAAC,CAAC;IACFf,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAEP,aAAa;MACnBa,SAAS,EAAEO,SAAS,CAACX,IAAI,CAACY,SAAS,CAACP;IACxC,CAAC,CAAC;IACFjB,KAAK,CAACS,QAAQ,CAAC;MACXC,IAAI,EAAEN,aAAa;MACnBO,MAAM,EAAEY,SAAS,CAACX,IAAI,CAACY,SAAS,CAACN;IACrC,CAAC,CAAC;EAGN,CAAC,QAAMC,GAAG,EAAC;IACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}