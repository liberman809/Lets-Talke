{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nimport { store } from './store.js';\nimport { SET_USERID, SET_USERNAME, SET_USEREMAIL, SET_USERCHATS, SET_PEERID } from './userReducer.js';\nimport { listen } from './socket.js';\nexport async function newUser(user) {\n  try {\n    const newUser = await axios.post(`http://localhost:3030/api/auth/signup`, user);\n    console.log(newUser.data.newUser.chats);\n    store.dispatch({\n      type: SET_USERID,\n      userId: newUser.data.newUser._id\n    });\n    store.dispatch({\n      type: SET_USERNAME,\n      userName: newUser.data.newUser.name\n    });\n    store.dispatch({\n      type: SET_USEREMAIL,\n      userEmail: newUser.data.newUser.email\n    });\n    store.dispatch({\n      type: SET_USERCHATS,\n      userChats: newUser.data.newUser.chats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function logIn(user) {\n  try {\n    const logInUser = await axios.post(`http://localhost:3030/api/auth/logIn`, user, {\n      withCredentials: true\n    });\n    if (logInUser.status == '200') store.dispatch({\n      type: SET_USERID,\n      userId: logInUser.data.userLogIn._id\n    });\n    store.dispatch({\n      type: SET_USERNAME,\n      userName: logInUser.data.userLogIn.name\n    });\n    store.dispatch({\n      type: SET_USEREMAIL,\n      userEmail: logInUser.data.userLogIn.email\n    });\n    store.dispatch({\n      type: SET_USERCHATS,\n      userChats: logInUser.data.userLogIn.chats\n    });\n    listen(logInUser.data.userLogIn._id);\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function findUser(parmeter) {\n  try {\n    const user = await axios.get(`http://localhost:3030/api/users/${parmeter}`);\n    return user.data.user;\n  } catch (err) {\n    console.log('ddddd', err);\n  }\n}\nexport async function updateUser(user, updat) {\n  try {\n    const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`, updat);\n    store.dispatch({\n      type: SET_USERCHATS,\n      userChats: updatUser.data.user.chats\n    });\n  } catch (err) {}\n}\nexport async function updateUserChats(id) {\n  try {\n    const user = await axios.get(`http://localhost:3030/api/users/${id}`);\n    store.dispatch({\n      type: SET_USERCHATS,\n      userChats: user.data.user.chats\n    });\n  } catch (err) {}\n}\nexport async function updateSomeUser(user, updat) {\n  try {\n    const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`, updat);\n    return updatUser;\n  } catch (err) {}\n}\nexport async function setPeerId(peerId) {\n  try {\n    store.dispatch({\n      type: SET_PEERID,\n      peerId: peerId\n    });\n  } catch (err) {}\n}","map":{"version":3,"names":["axios","AxiosError","store","SET_USERID","SET_USERNAME","SET_USEREMAIL","SET_USERCHATS","SET_PEERID","listen","newUser","user","post","console","log","data","chats","dispatch","type","userId","_id","userName","name","userEmail","email","userChats","err","logIn","logInUser","withCredentials","status","userLogIn","findUser","parmeter","get","updateUser","updat","updatUser","put","updateUserChats","id","updateSomeUser","setPeerId","peerId"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/userActions.js"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\nimport { store } from './store.js'\r\nimport { SET_USERID,SET_USERNAME,SET_USEREMAIL,SET_USERCHATS,SET_PEERID } from './userReducer.js'\r\nimport {listen} from './socket.js'\r\n\r\nexport async function newUser(user) {\r\n    try{\r\n        const newUser = await axios.post(`http://localhost:3030/api/auth/signup`,user)\r\n        console.log(newUser.data.newUser.chats)\r\n        store.dispatch({\r\n            type: SET_USERID,\r\n            userId: newUser.data.newUser._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERNAME,\r\n            userName: newUser.data.newUser.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_USEREMAIL,\r\n            userEmail: newUser.data.newUser.email\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userChats: newUser.data.newUser.chats\r\n        })\r\n\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n    \r\n}\r\n\r\nexport async function logIn(user) {\r\n    try{\r\n        const logInUser = await axios.post(`http://localhost:3030/api/auth/logIn`,user, { withCredentials: true })\r\n        if(logInUser.status == '200')\r\n        store.dispatch({\r\n            type: SET_USERID,\r\n            userId: logInUser.data.userLogIn._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERNAME,\r\n            userName: logInUser.data.userLogIn.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_USEREMAIL,\r\n            userEmail: logInUser.data.userLogIn.email\r\n        })\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userChats: logInUser.data.userLogIn.chats\r\n        })\r\n\r\n        listen(logInUser.data.userLogIn._id)\r\n\r\n\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n    \r\n}\r\n\r\nexport async function findUser(parmeter) {\r\n    try{\r\n        const user = await axios.get(`http://localhost:3030/api/users/${parmeter}`)\r\n        return user.data.user\r\n    }catch(err){\r\n        console.log('ddddd',err)\r\n    }\r\n}\r\n\r\n\r\nexport async function updateUser(user,updat){\r\n    try{\r\n        const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`,updat)\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userChats: updatUser.data.user.chats\r\n        })\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport async function updateUserChats(id){\r\n    try{\r\n        const user = await axios.get(`http://localhost:3030/api/users/${id}`)\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userChats: user.data.user.chats\r\n        })\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport async function updateSomeUser(user,updat){\r\n    try{\r\n        const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`,updat)\r\n        return updatUser\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport async function setPeerId(peerId){\r\n    try{\r\n        store.dispatch({\r\n            type: SET_PEERID,\r\n            peerId: peerId\r\n        })\r\n    \r\n    }catch(err){\r\n    \r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}