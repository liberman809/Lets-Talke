{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\participant.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { updateChat, resetGroup } from '../store/chatActions';\nimport { updateSomeUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Participant({\n  participant,\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const activeChat = useSelector(state => state.chatModule);\n  const [isManager, setIsManager] = useState(false);\n  useEffect(() => {\n    activeChat.managers.map(manager => {\n      if (manager.id === participant.id) {\n        setIsManager(true);\n      }\n    });\n  }, [activeChat.managers]);\n  async function removeFromGroup(userId, memberChats) {\n    try {\n      const updateParticipantsList = activeChat.participants.filter(participant => participant != userId);\n      const userChatUpdat = memberChats.filter(chat => chat.chatId != activeChat.chatId);\n      const updatParticipants = {\n        participants: updateParticipantsList\n      };\n      const updatChats = {\n        chats: userChatUpdat\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n      const updateUserChats = await updateSomeUser(userId, updatChats);\n    } catch (err) {}\n  }\n  async function addAsManager() {\n    try {\n      const updateChatManagers = [...activeChat.managers, {\n        id: participant.id,\n        name: participant.name\n      }];\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  async function removeAsManager() {\n    try {\n      const updateChatManagers = activeChat.managers.filter(manager => manager.id != participant.id);\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  function userDetails(userId) {\n    setMod('user');\n    setUserId(userId);\n  }\n  console.log(participant + ': isManager', isManager);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => userDetails(participant.id),\n        children: participant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: participant.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), isManager ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantActions\",\n      children: [!isManager && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => removeFromGroup(participant.id, participant.chats),\n          children: \"Remove from group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => addAsManager(),\n          children: \"Add as manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), isManager && participant.id != user.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actionButton\",\n        onClick: () => removeAsManager(),\n        children: \"Remove as manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n_s(Participant, \"ZIwxAwzSJ64P44q7ZQDheD9Yzfo=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Participant;\nvar _c;\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"names":["useEffect","useState","useSelector","updateChat","resetGroup","updateSomeUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Participant","participant","setMod","setUserId","_s","user","state","userModule","activeChat","chatModule","isManager","setIsManager","managers","map","manager","id","removeFromGroup","userId","memberChats","updateParticipantsList","participants","filter","userChatUpdat","chat","chatId","updatParticipants","updatChats","chats","updateParticipantsChat","updateUserChats","err","addAsManager","updateChatManagers","name","removeAsManager","userDetails","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/participant.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {updateChat,resetGroup} from '../store/chatActions'\r\nimport {updateSomeUser} from '../store/userActions'\r\n\r\nexport function Participant({participant,setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n    const [isManager,setIsManager] = useState(false)\r\n\r\n    useEffect(() => {\r\n        activeChat.managers.map((manager) => {\r\n            if(manager.id === participant.id){\r\n                setIsManager(true)\r\n            }\r\n        })\r\n    },[activeChat.managers])\r\n\r\n\r\n\r\n    async function removeFromGroup(userId,memberChats){\r\n        try{\r\n            const updateParticipantsList = activeChat.participants.filter((participant) => participant !=userId)\r\n            const userChatUpdat = memberChats.filter((chat) => chat.chatId != activeChat.chatId) \r\n\r\n            const updatParticipants = {\r\n                participants: updateParticipantsList \r\n            }\r\n            const updatChats = {\r\n                chats:userChatUpdat\r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n            const updateUserChats =  await updateSomeUser(userId,updatChats)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function addAsManager(){\r\n        try{\r\n            const updateChatManagers = [...activeChat.managers,{id:participant.id,name:participant.name}]\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    async function removeAsManager(){\r\n        try{\r\n            const updateChatManagers = activeChat.managers.filter((manager) => manager.id != participant.id)\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    function userDetails(userId){\r\n        setMod('user') \r\n        setUserId(userId)\r\n    }\r\n\r\n    console.log(participant +': isManager',isManager)\r\n\r\n    return <div className='participant'>\r\n        <div className='participantDetails'>\r\n            <div onClick={() => userDetails(participant.id)}>{participant.name}</div>\r\n            <div>{participant.email}</div>\r\n        </div>\r\n            {\r\n               (isManager)?<div>Manager</div>:<div>Member</div>\r\n            }\r\n            <div className='participantActions'>\r\n                {(!isManager &&\r\n                    <>\r\n                    <button className='actionButton' onClick={() => removeFromGroup(participant.id,participant.chats)}>Remove from group</button>\r\n                    <button className='actionButton' onClick={() => addAsManager()}>Add as manager</button>\r\n                    </>\r\n                )}\r\n                {((isManager && participant.id != user.userId) &&\r\n                    <button className='actionButton'  onClick={() => removeAsManager()}>Remove as manager</button>\r\n                )}\r\n            </div>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}