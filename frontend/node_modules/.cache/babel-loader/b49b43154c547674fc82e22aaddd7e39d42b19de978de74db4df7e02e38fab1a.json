{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\addToGroup.jsx\";\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddToGroup({\n  participants\n}) {\n  let participantsObj = [];\n  async function setParticipantsObj(participant) {\n    try {\n      const user = await findUser(participant);\n      console.log('aviv', user);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant\",\n        children: participant.name\n      }, participant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participantsList\",\n    children: participants.forEach(async function (participant) {\n      try {\n        const user = await findUser(participant);\n        console.log('aviv', user);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participant\",\n          children: participant.name\n        }, participant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }, this);\n      } catch (err) {}\n    })\n    // participants.map((participant) =>{\n    //     return <div className='participant' key={participant}>{participant}</div>\n    // })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}\n_c = AddToGroup;\nvar _c;\n$RefreshReg$(_c, \"AddToGroup\");","map":{"version":3,"names":["findUser","jsxDEV","_jsxDEV","AddToGroup","participants","participantsObj","setParticipantsObj","participant","user","console","log","className","children","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","err","forEach","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/addToGroup.jsx"],"sourcesContent":["import{findUser} from '../store/userActions'\r\n\r\n\r\nexport function AddToGroup({participants}){\r\n\r\n    let participantsObj = []\r\n\r\n\r\n    async function setParticipantsObj(participant){\r\n        try{\r\n            const user = await findUser(participant)\r\n            console.log('aviv',user)\r\n            return <div className='participant' key={participant._id}>{participant.name}</div>\r\n    \r\n        }catch(err){}\r\n    }\r\n    \r\n    return <div className='participantsList'>\r\n        {\r\n            participants.forEach(async function(participant){\r\n                try{\r\n                    const user = await findUser(participant)\r\n                    console.log('aviv',user)\r\n                    return <div className='participant' key={participant._id}>{participant.name}</div>\r\n    \r\n                }catch(err){}\r\n\r\n            })\r\n        // participants.map((participant) =>{\r\n        //     return <div className='participant' key={participant}>{participant}</div>\r\n        // })\r\n        }\r\n    \r\n    </div>\r\n}"],"mappings":";AAAA,SAAOA,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG5C,OAAO,SAASC,UAAUA,CAAC;EAACC;AAAY,CAAC,EAAC;EAEtC,IAAIC,eAAe,GAAG,EAAE;EAGxB,eAAeC,kBAAkBA,CAACC,WAAW,EAAC;IAC1C,IAAG;MACC,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACO,WAAW,CAAC;MACxCE,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,IAAI,CAAC;MACxB,oBAAON,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAwBL,WAAW,CAACM;MAAI,GAAlCN,WAAW,CAACO,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAAC;IAEtF,CAAC,QAAMC,GAAG,EAAC,CAAC;EAChB;EAEA,oBAAOjB,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAEhCR,YAAY,CAACgB,OAAO,CAAC,gBAAeb,WAAW,EAAC;MAC5C,IAAG;QACC,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACO,WAAW,CAAC;QACxCE,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,IAAI,CAAC;QACxB,oBAAON,OAAA;UAAKS,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAwBL,WAAW,CAACM;QAAI,GAAlCN,WAAW,CAACO,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAAC;MAEtF,CAAC,QAAMC,GAAG,EAAC,CAAC;IAEhB,CAAC;IACL;IACA;IACA;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AACV;AAACG,EAAA,GA/BelB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}