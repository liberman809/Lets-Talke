{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatSide.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { setChat } from '../store/chatActions';\nimport { findChat } from '../store/chatActions';\nimport { findMessage } from '../store/massageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatSide({\n  chat\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [displayChat, setDisplayChat] = useState();\n  const [lastMagage, setLlastMesage] = useState();\n  useEffect(() => {\n    getChat(chat.chatId);\n  }, []);\n  async function getChat(chatId) {\n    try {\n      const chat = await findChat(chatId);\n      if (chat.data.name) {\n        setDisplayChat(chat.data);\n      } else {\n        let chatNmae = chat.data.participants.filter(participant => {\n          participants != user.userId;\n        });\n        chat.data.name = chatNmae;\n        setDisplayChat(chat.data);\n      }\n    } catch (err) {}\n  }\n\n  // async function getLastMesage(messageId) {\n  //     try{\n  //         console.log('last')\n  //         const mesage = await findMessage(messageId)\n  //         setLlastMesage(mesage)\n  //     }catch(err){\n\n  //     }\n  // }\n\n  // console.log('chat',displayChat)\n  // console.log('lastMagage',lastMagage)\n\n  if (displayChat) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMenuName\",\n      onClick: () => setChat(chat.chatId),\n      children: displayChat.name\n    }, chat.chatName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(ChatSide, \"vzV2niQmGgcXjDDm0MQdk9pcdFc=\", false, function () {\n  return [useSelector];\n});\n_c = ChatSide;\nvar _c;\n$RefreshReg$(_c, \"ChatSide\");","map":{"version":3,"names":["useEffect","useState","useSelector","setChat","findChat","findMessage","jsxDEV","_jsxDEV","ChatSide","chat","_s","user","state","userModule","displayChat","setDisplayChat","lastMagage","setLlastMesage","getChat","chatId","data","name","chatNmae","participants","filter","participant","userId","err","className","onClick","children","chatName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatSide.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {setChat} from '../store/chatActions'\r\n\r\nimport {findChat} from '../store/chatActions'\r\nimport {findMessage} from '../store/massageActions'\r\n\r\nexport function ChatSide({chat}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n\r\n    const [displayChat,setDisplayChat] = useState()\r\n    const [lastMagage,setLlastMesage] = useState()\r\n\r\n    useEffect(() =>{\r\n        getChat(chat.chatId)\r\n    },[])\r\n\r\n\r\n    async function getChat(chatId){\r\n        try{\r\n            const chat = await findChat(chatId)\r\n            if(chat.data.name){\r\n                setDisplayChat(chat.data)\r\n            }else{\r\n                let chatNmae = chat.data.participants.filter((participant) => {participants != user.userId})\r\n                chat.data.name = chatNmae\r\n                setDisplayChat(chat.data)\r\n            }\r\n\r\n        }catch(err){}\r\n    }\r\n\r\n    // async function getLastMesage(messageId) {\r\n    //     try{\r\n    //         console.log('last')\r\n    //         const mesage = await findMessage(messageId)\r\n    //         setLlastMesage(mesage)\r\n    //     }catch(err){\r\n\r\n    //     }\r\n    // }\r\n\r\n    // console.log('chat',displayChat)\r\n    // console.log('lastMagage',lastMagage)\r\n\r\n    if(displayChat){\r\n        return <div key={chat.chatName} className='chatMenuName' onClick={() => setChat(chat.chatId)}>\r\n            {displayChat.name}\r\n        </div>\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,OAAO,QAAO,sBAAsB;AAE5C,SAAQC,QAAQ,QAAO,sBAAsB;AAC7C,SAAQC,WAAW,QAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,SAASC,QAAQA,CAAC;EAACC;AAAI,CAAC,EAAC;EAAAC,EAAA;EAE5B,MAAMC,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;EAEnD,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAC/C,MAAM,CAACe,UAAU,EAACC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAK;IACXkB,OAAO,CAACT,IAAI,CAACU,MAAM,CAAC;EACxB,CAAC,EAAC,EAAE,CAAC;EAGL,eAAeD,OAAOA,CAACC,MAAM,EAAC;IAC1B,IAAG;MACC,MAAMV,IAAI,GAAG,MAAML,QAAQ,CAACe,MAAM,CAAC;MACnC,IAAGV,IAAI,CAACW,IAAI,CAACC,IAAI,EAAC;QACdN,cAAc,CAACN,IAAI,CAACW,IAAI,CAAC;MAC7B,CAAC,MAAI;QACD,IAAIE,QAAQ,GAAGb,IAAI,CAACW,IAAI,CAACG,YAAY,CAACC,MAAM,CAAEC,WAAW,IAAK;UAACF,YAAY,IAAIZ,IAAI,CAACe,MAAM;QAAA,CAAC,CAAC;QAC5FjB,IAAI,CAACW,IAAI,CAACC,IAAI,GAAGC,QAAQ;QACzBP,cAAc,CAACN,IAAI,CAACW,IAAI,CAAC;MAC7B;IAEJ,CAAC,QAAMO,GAAG,EAAC,CAAC;EAChB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA,IAAGb,WAAW,EAAC;IACX,oBAAOP,OAAA;MAAyBqB,SAAS,EAAC,cAAc;MAACC,OAAO,EAAEA,CAAA,KAAM1B,OAAO,CAACM,IAAI,CAACU,MAAM,CAAE;MAAAW,QAAA,EACxFhB,WAAW,CAACO;IAAI,GADJZ,IAAI,CAACsB,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzB,CAAC;EACV;AACJ;AAACzB,EAAA,CA5CeF,QAAQ;EAAA,QAEPN,WAAW;AAAA;AAAAkC,EAAA,GAFZ5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}