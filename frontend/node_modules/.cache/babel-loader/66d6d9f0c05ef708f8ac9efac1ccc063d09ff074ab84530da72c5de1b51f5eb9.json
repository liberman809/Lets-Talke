{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\participant.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { updateChat, resetGroup } from '../store/chatActions';\nimport { updateSomeUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Participant({\n  participant,\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const activeChat = useSelector(state => state.chatModule);\n  async function removeFromGroup(userId, memberChats) {\n    try {\n      const updateParticipantsList = activeChat.participants.filter(participant => participant != userId);\n      const userChatUpdat = memberChats.filter(chat => chat.chatId != activeChat.chatId);\n      const updatParticipants = {\n        participants: updateParticipantsList\n      };\n      const updatChats = {\n        chats: userChatUpdat\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n      const updateUserChats = await updateSomeUser(userId, updatChats);\n    } catch (err) {}\n  }\n  async function addAsManager() {\n    try {\n      const updateChatManagers = [...activeChat.managers, participant._id];\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  async function removeAsManager() {\n    try {\n      const updateChatManagers = activeChat.managers.filter(manager => manager != participant._id);\n      const updatParticipants = {\n        managers: updateChatManagers\n      };\n      const updateParticipantsChat = await updateChat(activeChat.chatId, updatParticipants);\n    } catch (err) {}\n  }\n  function userDetails(userId) {\n    setMod('user');\n    setUserId(userId);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => userDetails(participant.id),\n        children: participant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: participant.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), activeChat.managers.map(manager => {\n      if (manager.id === user.userId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 31\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participantActions\",\n      children: [activeChat.managers.includes(user.userId) && !participant.isManager && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => removeFromGroup(participant.id, participant.chats),\n          children: \"Remove from group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton\",\n          onClick: () => addAsManager(),\n          children: \"Add as manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), activeChat.managers.includes(user.userId) && participant.isManager && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"actionButton\",\n        onClick: () => removeAsManager(),\n        children: \"Remove as manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_s(Participant, \"XCBJpo0PhOq8sSY2JYu6bbEnOGU=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Participant;\nvar _c;\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"names":["useEffect","useState","useSelector","updateChat","resetGroup","updateSomeUser","jsxDEV","_jsxDEV","Fragment","_Fragment","Participant","participant","setMod","setUserId","_s","user","state","userModule","activeChat","chatModule","removeFromGroup","userId","memberChats","updateParticipantsList","participants","filter","userChatUpdat","chat","chatId","updatParticipants","updatChats","chats","updateParticipantsChat","updateUserChats","err","addAsManager","updateChatManagers","managers","_id","removeAsManager","manager","userDetails","className","children","onClick","id","name","fileName","_jsxFileName","lineNumber","columnNumber","email","map","includes","isManager","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/participant.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {updateChat,resetGroup} from '../store/chatActions'\r\nimport {updateSomeUser} from '../store/userActions'\r\n\r\nexport function Participant({participant,setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n\r\n    async function removeFromGroup(userId,memberChats){\r\n        try{\r\n            const updateParticipantsList = activeChat.participants.filter((participant) => participant !=userId)\r\n            const userChatUpdat = memberChats.filter((chat) => chat.chatId != activeChat.chatId) \r\n\r\n            const updatParticipants = {\r\n                participants: updateParticipantsList \r\n            }\r\n            const updatChats = {\r\n                chats:userChatUpdat\r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n            const updateUserChats =  await updateSomeUser(userId,updatChats)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function addAsManager(){\r\n        try{\r\n            const updateChatManagers = [...activeChat.managers,participant._id]\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    async function removeAsManager(){\r\n        try{\r\n            const updateChatManagers = activeChat.managers.filter((manager) => manager != participant._id)\r\n            const updatParticipants = {\r\n                managers: updateChatManagers \r\n            }\r\n            const updateParticipantsChat = await updateChat(activeChat.chatId,updatParticipants)\r\n        }catch(err){}\r\n\r\n    }\r\n\r\n    function userDetails(userId){\r\n        setMod('user') \r\n        setUserId(userId)\r\n    }\r\n\r\n    return <div className='participant'>\r\n        <div className='participantDetails'>\r\n            <div onClick={() => userDetails(participant.id)}>{participant.name}</div>\r\n            <div>{participant.email}</div>\r\n        </div>\r\n            {\r\n                activeChat.managers.map((manager) =>{\r\n                    if(manager.id === user.userId){\r\n                        return <div>Manager</div>\r\n                    }else{\r\n                       return <div>Member</div>\r\n                    }\r\n                })\r\n            }\r\n            {/* {(participant.isManager &&\r\n                <div>Manager</div>\r\n            )}\r\n             {(!participant.isManager &&\r\n                <div>Member</div>\r\n            )} */}\r\n            <div className='participantActions'>\r\n                {((activeChat.managers.includes(user.userId) && !participant.isManager) &&\r\n                    <>\r\n                    <button className='actionButton' onClick={() => removeFromGroup(participant.id,participant.chats)}>Remove from group</button>\r\n                    <button className='actionButton' onClick={() => addAsManager()}>Add as manager</button>\r\n                    </>\r\n                )}\r\n                {((activeChat.managers.includes(user.userId) && participant.isManager) &&\r\n                    <button className='actionButton'  onClick={() => removeAsManager()}>Remove as manager</button>\r\n                )}\r\n            </div>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}