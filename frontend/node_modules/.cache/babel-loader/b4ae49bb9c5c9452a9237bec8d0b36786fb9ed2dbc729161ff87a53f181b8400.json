{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatManage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { AddNewUser } from './addNewUser';\nimport { Participant } from './participant';\nimport { updateChat, resetGroup } from '../store/chatActions';\nimport { updateUser, updateSomeUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatManage({\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const activeChat = useSelector(state => state.chatModule);\n  const [isManager, setIsManager] = undefined;\n  useEffect(() => {\n    activeChat.managers.map(manager => {\n      if (manager.id === user.userId) {\n        setIsManager(true);\n      }\n    });\n  }, [activeChat]);\n  async function leaveGroup() {\n    try {\n      const updatedParticipants = activeChat.participants.filter(participant => participant !== user.userId);\n      let updatedManagers = [...activeChat.managers];\n      if (updatedManagers.includes(user.userId)) {\n        updatedManagers = updatedManagers.filter(manager => manager !== user.userId);\n        if (updatedManagers.length === 0) {\n          updatedManagers.push(activeChat.participants[0]);\n        }\n      }\n      const chatUpdates = {\n        participants: updatedParticipants,\n        managers: updatedManagers\n      };\n      await Promise.all([updateChat(activeChat.chatId, chatUpdates), updateUser(user.userId, {\n        chats: user.userChats.filter(chat => chat.chatId !== activeChat.chatId)\n      })]);\n      resetGroup();\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatManage\",\n    children: [activeChat.type == 'group' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"groupDescription\",\n        children: activeChat.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), isManager && /*#__PURE__*/_jsxDEV(AddNewUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participantsList\",\n        children: activeChat.participants.map(participant => {\n          return /*#__PURE__*/_jsxDEV(Participant, {\n            participant: participant,\n            setMod: setMod,\n            setUserId: setUserId\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groupActions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => leaveGroup(),\n        children: \"leave group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"By clicking you will leave the group and it will be deleted from your chat list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatManage, \"w2t3CCRY6DEaEEB6FesUq60Rl3Y=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = ChatManage;\nvar _c;\n$RefreshReg$(_c, \"ChatManage\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","AddNewUser","Participant","updateChat","resetGroup","updateUser","updateSomeUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatManage","setMod","setUserId","_s","user","state","userModule","activeChat","chatModule","isManager","setIsManager","undefined","managers","map","manager","id","userId","leaveGroup","updatedParticipants","participants","filter","participant","updatedManagers","includes","length","push","chatUpdates","Promise","all","chatId","chats","userChats","chat","err","className","children","type","description","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatManage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {findUser} from '../store/userActions'\r\nimport {AddNewUser} from './addNewUser'\r\nimport {Participant} from './participant'\r\n\r\nimport {updateChat,resetGroup} from '../store/chatActions'\r\nimport {updateUser,updateSomeUser} from '../store/userActions'\r\n\r\nexport function ChatManage({setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n    const [isManager,setIsManager] = (undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        activeChat.managers.map((manager) => {\r\n            if(manager.id === user.userId){\r\n                setIsManager(true)\r\n            }\r\n        })\r\n    },[activeChat])\r\n\r\n    async function leaveGroup() {\r\n        try {\r\n            const updatedParticipants = activeChat.participants.filter((participant) => participant !== user.userId);\r\n    \r\n            let updatedManagers = [...activeChat.managers];\r\n            if (updatedManagers.includes(user.userId)) {\r\n                updatedManagers = updatedManagers.filter((manager) => manager !== user.userId);\r\n                if (updatedManagers.length === 0) {\r\n                    updatedManagers.push(activeChat.participants[0]); \r\n                }\r\n            }\r\n    \r\n            const chatUpdates = {\r\n                participants: updatedParticipants,\r\n                managers: updatedManagers\r\n            };\r\n    \r\n            await Promise.all([\r\n                updateChat(activeChat.chatId, chatUpdates),\r\n                updateUser(user.userId, { chats: user.userChats.filter(chat => chat.chatId !== activeChat.chatId) })\r\n            ]);\r\n    \r\n            resetGroup();\r\n        }catch(err){}\r\n    }\r\n\r\n    return <div className='chatManage'>\r\n        {(activeChat.type == 'group' &&\r\n            <>\r\n            <div className='groupDescription'>\r\n                {activeChat.description}\r\n            </div>\r\n            {\r\n                (isManager && <AddNewUser />)    \r\n            }\r\n            <div className='participantsList'>\r\n                {            \r\n                activeChat.participants.map((participant) => {\r\n                    return <Participant key={participant.id} participant={participant} setMod={setMod} setUserId={setUserId} />\r\n                })     \r\n                }\r\n            </div>\r\n            \r\n            </>\r\n        )}\r\n\r\n        <div className='groupActions'>\r\n            <button onClick={() => leaveGroup()}>leave group</button>\r\n            <div>By clicking you will leave the group and it will be deleted from your chat list</div>\r\n        </div>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}