{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newMsg.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { newMsg } from '../store/massageActions';\nimport { updateChat } from '../store/chatActions';\nimport { socketNewMsg } from '../store/socket';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewMsg({\n  setMod\n}) {\n  _s();\n  const activeChat = useSelector(state => state.chatModule);\n  const user = useSelector(state => state.userModule);\n  const [peerId, setPeerId] = useState('');\n  const [text, setText] = useState('');\n  async function newMassage(e) {\n    try {\n      e.preventDefault();\n      const massage = {\n        from: {\n          id: user.userId,\n          name: user.userName\n        },\n        to: {\n          id: activeChat.chatId,\n          name: activeChat ? activeChat.chatName : ''\n        },\n        text: text\n      };\n      const newMesage = await newMsg(massage);\n      const chatMessages = activeChat.messages ? activeChat.messages : [];\n      const updats = {\n        messages: [...chatMessages, newMesage._id]\n      };\n      const chatUpdates = await updateChat(activeChat.chatId, updats);\n      setText('');\n      socketNewMsg(activeChat.chatId);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newMsg\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newMsgForm\",\n      onSubmit: e => newMassage(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"msgText\",\n        placeholder: \"Massage\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"msgSend\",\n        value: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.open(`/video/${activeChat.chatId}`, '_blank'),\n      children: \"start video chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(NewMsg, \"tQwSZLp7wPrHEpS/DL8INHUc9As=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = NewMsg;\nvar _c;\n$RefreshReg$(_c, \"NewMsg\");","map":{"version":3,"names":["useState","useSelector","newMsg","updateChat","socketNewMsg","useNavigate","jsxDEV","_jsxDEV","NewMsg","setMod","_s","activeChat","state","chatModule","user","userModule","peerId","setPeerId","text","setText","newMassage","e","preventDefault","massage","from","id","userId","name","userName","to","chatId","chatName","newMesage","chatMessages","messages","updats","_id","chatUpdates","err","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newMsg.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {newMsg} from '../store/massageActions'\r\nimport {updateChat} from '../store/chatActions'\r\nimport {socketNewMsg} from '../store/socket'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport function NewMsg({setMod}){\r\n\r\n    const activeChat = useSelector(state => state.chatModule )\r\n    const user = useSelector(state => state.userModule )\r\n\r\n\r\n    const [peerId, setPeerId] = useState('');\r\n\r\n    const [text,setText] = useState('')\r\n\r\n    async function newMassage(e){\r\n        try{\r\n            e.preventDefault()\r\n            const massage = {\r\n                from: {\r\n                    id:user.userId,\r\n                    name:user.userName\r\n                },\r\n                to: {\r\n                    id:activeChat.chatId,\r\n                    name: (activeChat)?activeChat.chatName:''\r\n                },\r\n                text: text\r\n            }\r\n\r\n            const newMesage = await newMsg(massage)\r\n            const chatMessages = (activeChat.messages)?activeChat.messages: []\r\n            const updats = {\r\n                messages: [...chatMessages,newMesage._id]\r\n            }\r\n            const chatUpdates = await updateChat(activeChat.chatId,updats)\r\n            setText('')\r\n            socketNewMsg(activeChat.chatId)\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    return <div className=\"newMsg\">\r\n        <form className=\"newMsgForm\" onSubmit={(e) => newMassage(e)}>\r\n            <input type=\"text\" className=\"msgText\" placeholder=\"Massage\" value={text} onChange={(e) => setText(e.target.value)}></input>\r\n            <input type=\"submit\" className=\"msgSend\" value={\"send\"}></input>\r\n        </form>\r\n        <button onClick={() => window.open(`/video/${activeChat.chatId}`, '_blank')}>start video chat</button>\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}