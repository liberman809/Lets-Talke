{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newGroup.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { AddToGroup } from './addToGroup';\nimport { creatNewChat } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewGroup() {\n  _s();\n  const userID = useSelector(state => state.userModule.userId);\n  const userChats = useSelector(state => state.userModule.userChats);\n  const [groupName, setGroupName] = useState('');\n  const [description, setDescription] = useState('');\n  const [email, setEmail] = useState('');\n  const [participants, setParticipants] = useState([]);\n  const [userFound, setUserFound] = useState('');\n  console.log('userFound', userFound);\n  async function searchUsser() {\n    try {\n      const user = await findUser(email);\n      setUserFound({\n        id: user._id,\n        name: user.name\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function addUuser() {\n    try {\n      const participantsList = participants;\n      const updateParticipants = [...participantsList, userFound.name];\n      setParticipants(updateParticipants);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function newGrop(e) {\n    try {\n      e.preventDefault();\n      const Ngroup = {\n        type: 'group',\n        creator: userID,\n        name: groupName,\n        participants: participants,\n        managers: [userID],\n        description: description\n      };\n      const newChat = await creatNewChat(Ngroup);\n      const userChats = userChats ? user.userChats : [];\n      const updatUserChat = [...userChats, newChat.data._id];\n      const updateChats = {\n        chats: updatUserChat\n      };\n      updateUser(user.userId, updateChats);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newGroup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => newGrop(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Group description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"look for user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: 'search',\n        onClick: () => searchUsser()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userFound\",\n        onClick: () => {\n          addUuser(userFound.id);\n        },\n        children: userFound.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddToGroup, {\n        participants: participants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Creat group'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n_s(NewGroup, \"OJqYldBbchcu9X/mKivOUmPrF4w=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = NewGroup;\nvar _c;\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"names":["useState","useSelector","findUser","AddToGroup","creatNewChat","updateUser","jsxDEV","_jsxDEV","NewGroup","_s","userID","state","userModule","userId","userChats","groupName","setGroupName","description","setDescription","email","setEmail","participants","setParticipants","userFound","setUserFound","console","log","searchUsser","user","id","_id","name","err","addUuser","participantsList","updateParticipants","newGrop","e","preventDefault","Ngroup","type","creator","managers","newChat","updatUserChat","data","updateChats","chats","className","children","onSubmit","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newGroup.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport{findUser} from '../store/userActions'\r\nimport {AddToGroup} from './addToGroup'\r\nimport {creatNewChat} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\nexport function NewGroup(){\r\n    const userID = useSelector(state => state.userModule.userId )\r\n    const userChats = useSelector(state => state.userModule.userChats )\r\n\r\n    const [groupName,setGroupName] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [participants,setParticipants] = useState([])    \r\n\r\n    const [userFound,setUserFound] = useState('')\r\n\r\n    console.log('userFound',userFound)\r\n\r\n    async function searchUsser() {\r\n        try{\r\n            const user = await findUser(email)\r\n            setUserFound({id:user._id,name:user.name})\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async function addUuser() {\r\n        try{\r\n            const participantsList = participants\r\n            const updateParticipants = [...participantsList,userFound.name]\r\n            setParticipants(updateParticipants)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    async function newGrop(e){\r\n        try{\r\n            e.preventDefault()\r\n            const Ngroup ={\r\n                type: 'group',\r\n                creator: userID,\r\n                name: groupName,\r\n                participants: participants,\r\n                managers: [userID],\r\n                description: description\r\n            }\r\n            const newChat =  await creatNewChat(Ngroup)\r\n    \r\n            const userChats = (userChats)? user.userChats: []\r\n\r\n            const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n            const updateChats = {\r\n                chats:updatUserChat\r\n            }\r\n            updateUser(user.userId,updateChats)\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className='newGroup'>\r\n        <form onSubmit={(e) => newGrop(e)}>\r\n            <input type='text' placeholder='Group name' value={groupName} onChange={(e) => setGroupName(e.target.value)}></input>\r\n            <textarea placeholder='Group description' value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            <div>look for user</div>\r\n            <input type='text' placeholder='Email' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <input type='button' value={'search'} onClick={() => searchUsser()}></input>\r\n            <div className='userFound' onClick={() => {addUuser(userFound.id)}}>{userFound.name}</div>\r\n\r\n            <AddToGroup participants={participants} />\r\n            <input type='submit' value={'Creat group'}></input>\r\n    \r\n        </form>\r\n    </div>\r\n    \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}