{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { NewMsg } from './newMsg';\nimport { ChatHeader } from './chatHeader';\nimport { Message } from './message';\nimport { useEffect, useState } from 'react';\nimport { ChatManage } from './chatManage';\nimport { ChatUserMod } from './chatUserMod';\nimport { joinChat } from '../store/socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chat({\n  mod,\n  setMod\n}) {\n  _s();\n  const activeChat = useSelector(state => state.chatModule);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    if (activeChat.chatId) joinChat(activeChat.chatId);\n  }, [activeChat.chatId]);\n  if (!activeChat.chatId || !activeChat.messages) {\n    return null;\n  }\n  console.log('mod', mod);\n  const chat = {\n    chat: () => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBody\",\n          children: activeChat.messages && mod == 'chat' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: activeChat.messages.map(message => {\n              return /*#__PURE__*/_jsxDEV(Message, {\n                messageId: message\n              }, message, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NewMsg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    },\n    chatManage: () => {\n      return /*#__PURE__*/_jsxDEV(ChatManage, {\n        setMod: setMod,\n        setUserId: setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 35\n      }, this);\n    },\n    user: () => {\n      return /*#__PURE__*/_jsxDEV(ChatUserMod, {\n        mod: mod,\n        setMod: setMod,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      chat: activeChat,\n      mod: mod,\n      setMod: setMod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), chat()[mod]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(Chat, \"947p7GB+lc8TYDj4bT8jand6oc0=\", false, function () {\n  return [useSelector];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useSelector","NewMsg","ChatHeader","Message","useEffect","useState","ChatManage","ChatUserMod","joinChat","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","mod","setMod","_s","activeChat","state","chatModule","userId","setUserId","chatId","messages","console","log","chat","children","className","map","message","messageId","fileName","_jsxFileName","lineNumber","columnNumber","chatManage","user","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chat.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport {NewMsg} from './newMsg'\r\nimport {ChatHeader} from './chatHeader'\r\nimport {Message} from './message'\r\nimport { useEffect, useState } from 'react'\r\nimport {ChatManage} from './chatManage'\r\nimport {ChatUserMod} from './chatUserMod'\r\nimport {joinChat} from '../store/socket'\r\n\r\n\r\nexport function Chat({mod,setMod}){\r\n    const activeChat = useSelector(state => state.chatModule )\r\n\r\n    const [userId,setUserId] = useState()\r\n\r\n    useEffect(() =>{\r\n        if(activeChat.chatId) joinChat(activeChat.chatId)\r\n    },[activeChat.chatId])\r\n\r\n    if (!activeChat.chatId || !activeChat.messages) {\r\n        return null\r\n    }\r\n\r\n    console.log('mod',mod)\r\n\r\n    const chat ={\r\n        chat: () => {return(\r\n            <>\r\n                <div className='chatBody'>\r\n                    {((activeChat.messages && mod == 'chat') &&\r\n                        <>\r\n                            {activeChat.messages.map((message) =>{\r\n                                return <Message key={message}  messageId={message} />\r\n                            })}\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <NewMsg />\r\n            </>\r\n            )}\r\n        ,\r\n        chatManage: () => {return <ChatManage setMod={setMod} setUserId={setUserId} />}\r\n        ,\r\n        user: () => {return <ChatUserMod mod={mod} setMod={setMod} userId={userId} />}\r\n    }\r\n\r\n    return <div className='chat'>\r\n        <ChatHeader chat={activeChat} mod={mod} setMod={setMod} />\r\n        {chat()[mod]}\r\n    </div>\r\n    \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}