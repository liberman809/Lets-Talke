{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatHeader({\n  chat,\n  mod,\n  setMod,\n  setUserId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  function changeMod() {\n    if (mod === 'chat') {\n      if (chat.type === 'group') {\n        setMod('chatManage');\n      } else {\n        var _chat$participants$fi;\n        setMod('user');\n        const userId = (_chat$participants$fi = chat.participants.find(participant => participant.id !== user.userId)) === null || _chat$participants$fi === void 0 ? void 0 : _chat$participants$fi.id;\n        if (userId) {\n          setUserId(userId);\n        }\n      }\n    } else {\n      setMod('chat');\n    }\n  }\n  function userDetails(userId) {\n    setMod('user');\n    setUserId(userId);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chat.chatName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.chatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatManageHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HedaerUser\",\n          onClick: () => userDetails(chat.founder.id),\n          children: [\"founder: \", chat.founder.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatManagers\",\n          children: [\"managers:\", chat.managers.length > 0 && chat.managers.map(manager => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"HedaerUser\",\n              onClick: () => userDetails(manager.id),\n              children: manager.name\n            }, manager, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 44\n            }, this);\n          }), \"}\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMembers\",\n        children: [\"members:\", chat.participants.map(participant => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"HedaerUser\",\n            onClick: () => userDetails(participant.id),\n            children: participant.name\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 40\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }, this) : typeof chat.chatName == 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        onClick: () => changeMod(),\n        children: chat.participants[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 58\n    }, this)\n  }, void 0, false);\n}\n_s(ChatHeader, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = ChatHeader;\nvar _c;\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"names":["useEffect","useState","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHeader","chat","mod","setMod","setUserId","_s","user","state","userModule","changeMod","type","_chat$participants$fi","userId","participants","find","participant","id","userDetails","children","chatName","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","founder","name","managers","length","map","manager","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatHeader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport function ChatHeader({chat,mod,setMod,setUserId}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n\r\n    function changeMod(){\r\n        if(mod === 'chat'){\r\n            if(chat.type === 'group'){\r\n                setMod('chatManage')\r\n            }else{\r\n                setMod('user') \r\n                const userId = chat.participants.find(participant => participant.id !== user.userId)?.id;\r\n                if (userId) {\r\n                    setUserId(userId);\r\n                }            }\r\n        }else{\r\n            setMod('chat')\r\n        }\r\n    }\r\n\r\n    function userDetails(userId){\r\n        setMod('user') \r\n        setUserId(userId)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {chat.chatName ?(<div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.chatName}</div>\r\n                <div className='chatManageHeader'>\r\n                    {<div className='HedaerUser' onClick={() => userDetails(chat.founder.id)}>founder: {chat.founder.name}</div>}\r\n                    <div className='chatManagers'>\r\n                        managers:\r\n                        {\r\n                            (chat.managers.length > 0) &&\r\n                                chat.managers.map((manager) => {\r\n                                    return <div key={manager} className='HedaerUser' onClick={() => userDetails(manager.id)}>{manager.name}</div>\r\n                                })\r\n    \r\n                            }\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='chatMembers'>\r\n                        members:\r\n                        {\r\n                        chat.participants.map((participant) => {\r\n                                return <div key={participant.id} className='HedaerUser' onClick={() => userDetails(participant.id)}>{participant.name}</div>\r\n                            })\r\n                        }\r\n                </div>\r\n                </div>) :\r\n                (typeof(chat.chatName) == 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName' onClick={() => changeMod()}>{chat.participants[0].name}</div>\r\n                </div>)\r\n            }\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}