{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatHeader.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ChatHeader({\n  chat\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [user2, setUser2] = useState('');\n  const [founder, setFounder] = useState('');\n  const [managers, setManagers] = useState([]);\n  useEffect(() => {\n    if (chat.type == 'privet') {\n      const user2Id = chat.participants.filter(participant => participant != user.userId);\n      findUser2(user2Id);\n    } else {\n      setGroup(chat.founder);\n    }\n  }, []);\n  async function findUser2(id) {\n    try {\n      const user = await findUser(id);\n      setUser2(user.name);\n    } catch (err) {}\n  }\n  async function setGroup(founderId) {\n    try {\n      const founder = await findUser(founderId);\n      const founderName = founder.name;\n      setFounder(founderName);\n      const managersNames = [];\n      for (let manager in chat.managers) {\n        console.log(manager);\n        // const user = await findUser(manager)\n        // managersNames.push(user)\n      }\n      console.log(managersNames);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof chat.chatName != 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        children: chat.chatName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatManage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatFounder\",\n          children: [\"founder: \", founder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatManager\",\n          children: managers.map(manager => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: manager\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMembers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 54\n    }, this), typeof chat.chatName == 'undefined' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatHeader\",\n      children: user2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 54\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatHeader, \"CP13uC8VAJWDnD+l5TxmezKd9fQ=\", false, function () {\n  return [useSelector];\n});\n_c = ChatHeader;\nvar _c;\n$RefreshReg$(_c, \"ChatHeader\");","map":{"version":3,"names":["useEffect","useState","useSelector","findUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHeader","chat","_s","user","state","userModule","user2","setUser2","founder","setFounder","managers","setManagers","type","user2Id","participants","filter","participant","userId","findUser2","setGroup","id","name","err","founderId","founderName","managersNames","manager","console","log","children","chatName","className","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatHeader.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {findUser} from '../store/userActions'\r\n\r\nexport function ChatHeader({chat}){\r\n\r\n    const user = useSelector(state => state.userModule)\r\n    const [user2,setUser2] = useState('')\r\n    const [founder, setFounder] = useState('')\r\n    const [managers,setManagers] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if(chat.type == 'privet'){\r\n            const user2Id = chat.participants.filter((participant) => participant != user.userId)\r\n            findUser2(user2Id)\r\n        }else{\r\n            setGroup(chat.founder)\r\n        }\r\n    },[])\r\n\r\n    async function findUser2(id) {\r\n        try{\r\n            const user = await findUser(id)\r\n            setUser2(user.name)\r\n        }catch(err){}\r\n    }\r\n\r\n    async function setGroup(founderId){\r\n        try{\r\n            const founder = await findUser(founderId)\r\n            const founderName = founder.name\r\n            setFounder(founderName)\r\n\r\n            const managersNames = []\r\n\r\n            for(let manager in chat.managers){\r\n                console.log(manager)\r\n                // const user = await findUser(manager)\r\n                // managersNames.push(user)\r\n            }\r\n\r\n            console.log(managersNames)\r\n\r\n        }catch(err){}\r\n    }\r\n\r\n\r\n    return <>\r\n        {\r\n            (typeof(chat.chatName) != 'undefined' && <div className='chatHeader'>\r\n                <div className='chatName'>{chat.chatName}</div>\r\n                <div className='chatManage'>\r\n                    <div className='chatFounder'>founder: {founder}</div>\r\n                    <div className='chatManager'>\r\n                        {\r\n                            managers.map((manager) => {\r\n                                return <div>{manager}</div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='chatMembers'></div>\r\n            </div>)\r\n        }\r\n        {\r\n            (typeof(chat.chatName) == 'undefined' && <div className='chatHeader'>{\r\n                user2\r\n            }</div>)\r\n        }\r\n\r\n    </>\r\n\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}