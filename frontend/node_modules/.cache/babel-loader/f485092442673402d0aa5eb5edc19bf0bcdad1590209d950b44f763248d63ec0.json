{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { NewMsg } from './newMsg';\nimport { ChatHeader } from './chatHeader';\nimport { Message } from './message';\nimport { useEffect, useState } from 'react';\nimport { ChatManage } from './chatManage';\nimport { ChatUserMod } from './chatUserMod';\nimport { joinChat } from '../store/socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chat({\n  mod,\n  setMod,\n  peerId\n}) {\n  _s();\n  const activeChat = useSelector(state => state.chatModule);\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    if (activeChat.chatId) joinChat(activeChat.chatId);\n  }, [activeChat.chatId]);\n  if (!activeChat.chatId || !activeChat.messages) {\n    return null;\n  }\n  const renderChat = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBody\",\n      children: activeChat.messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          messageId: message\n        }, message, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewMsg, {\n      setMod: setMod\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  const renderChatManage = () => /*#__PURE__*/_jsxDEV(ChatManage, {\n    setMod: setMod,\n    setUserId: setUserId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 36\n  }, this);\n  const renderUser = () => /*#__PURE__*/_jsxDEV(ChatUserMod, {\n    mod: mod,\n    setMod: setMod,\n    userId: userId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 29\n  }, this);\n  const renderVideo = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"aaa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 32\n  }, this);\n  const chat = {\n    chat: renderChat,\n    chatManage: renderChatManage,\n    user: renderUser,\n    video: renderVideo\n  };\n  const renderChatContent = chat[mod] || (() => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u05E9\\u05D2\\u05D9\\u05D0\\u05D4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      chat: activeChat,\n      mod: mod,\n      setMod: setMod,\n      setUserId: setUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), renderChatContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n_s(Chat, \"947p7GB+lc8TYDj4bT8jand6oc0=\", false, function () {\n  return [useSelector];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useSelector","NewMsg","ChatHeader","Message","useEffect","useState","ChatManage","ChatUserMod","joinChat","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","mod","setMod","peerId","_s","activeChat","state","chatModule","userId","setUserId","chatId","messages","renderChat","children","className","map","message","messageId","fileName","_jsxFileName","lineNumber","columnNumber","renderChatManage","renderUser","renderVideo","chat","chatManage","user","video","renderChatContent","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chat.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport {NewMsg} from './newMsg'\r\nimport {ChatHeader} from './chatHeader'\r\nimport {Message} from './message'\r\nimport { useEffect, useState } from 'react'\r\nimport {ChatManage} from './chatManage'\r\nimport {ChatUserMod} from './chatUserMod'\r\nimport {joinChat} from '../store/socket'\r\n\r\n\r\nexport function Chat({mod,setMod, peerId}){\r\n    const activeChat = useSelector(state => state.chatModule)\r\n    const [userId,setUserId] = useState()\r\n\r\n\r\n    useEffect(() =>{\r\n        if(activeChat.chatId) joinChat(activeChat.chatId)\r\n    },[activeChat.chatId])\r\n\r\n    if (!activeChat.chatId || !activeChat.messages) {\r\n        return null\r\n    }\r\n\r\n    const renderChat = () => (\r\n        <>\r\n            <div className='chatBody'>\r\n                {activeChat.messages.map((message) =>{\r\n                    return <Message key={message}  messageId={message} />\r\n                })}\r\n            </div>\r\n            <NewMsg setMod={setMod}/>\r\n        </>\r\n    )\r\n\r\n    const renderChatManage = () =>(<ChatManage setMod={setMod} setUserId={setUserId} />)\r\n    const renderUser =() =>(<ChatUserMod mod={mod} setMod={setMod} userId={userId} />)\r\n    const renderVideo = () => (<div>aaa</div>)\r\n\r\n\r\n    const chat ={\r\n        chat: renderChat,\r\n        chatManage: renderChatManage,\r\n        user: renderUser,\r\n        video: renderVideo\r\n    }\r\n\r\n    const renderChatContent = chat[mod] || (() => <div>שגיאה</div>)\r\n\r\n    return <div className='chat'>\r\n        <ChatHeader chat={activeChat} mod={mod} setMod={setMod} setUserId={setUserId} />\r\n        {renderChatContent()}\r\n    </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}