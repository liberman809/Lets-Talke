{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatUserMod.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatUserMod({\n  setMod,\n  userId\n}) {\n  _s();\n  const userLogdIn = useSelector(state => state.userModule);\n  const [user, setUser] = useState();\n  useEffect(() => {\n    getUser(userId);\n  }, [userId]);\n  async function getUser(userId) {\n    try {\n      const user = await findUser(userId);\n      setUser(user);\n    } catch (err) {}\n  }\n  console.log(user.chats);\n  console.log('userLogdIn.userChats', userLogdIn.userChats);\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUserMod\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setMod('chat'),\n        children: \"Rreturn to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), user.chats.map(chat => {\n        if (userLogdIn.userChats.includes(chat.chatId)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"'a'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 32\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"'b'\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(ChatUserMod, \"nD7eO1dZ4GsnatWSrHMZQRdh2M8=\", false, function () {\n  return [useSelector];\n});\n_c = ChatUserMod;\nvar _c;\n$RefreshReg$(_c, \"ChatUserMod\");","map":{"version":3,"names":["useSelector","useEffect","useState","findUser","jsxDEV","_jsxDEV","ChatUserMod","setMod","userId","_s","userLogdIn","state","userModule","user","setUser","getUser","err","console","log","chats","userChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","email","createdAt","map","chat","includes","chatId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatUserMod.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport {findUser} from '../store/userActions'\r\n\r\n\r\nexport function ChatUserMod({setMod,userId}){\r\n    \r\n    const userLogdIn = useSelector(state => state.userModule )\r\n\r\n    const [user,setUser] = useState()\r\n\r\n    useEffect(() =>{\r\n        getUser(userId)\r\n    },[userId])\r\n\r\n    async function getUser(userId){\r\n        try{\r\n            const user = await findUser(userId)\r\n            setUser(user)\r\n        }catch(err){}\r\n    }\r\n\r\n    console.log(user.chats)\r\n    console.log('userLogdIn.userChats',userLogdIn.userChats)\r\n    if(user){\r\n        return <div className=\"chatUserMod\">\r\n            <div onClick={() => setMod('chat')}>Rreturn to chat</div>\r\n            <div>{user.name}</div>\r\n            <div>{user.email}</div>\r\n            <div>{user.createdAt}</div>\r\n\r\n            {\r\n                user.chats.map((chat) => {\r\n                    if(userLogdIn.userChats.includes(chat.chatId)){\r\n                        return <div>'a'</div>\r\n                    }else{\r\n                        return <div>'b'</div>\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAAQC,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG7C,OAAO,SAASC,WAAWA,CAAC;EAACC,MAAM;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAExC,MAAMC,UAAU,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAE1D,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAK;IACXc,OAAO,CAACP,MAAM,CAAC;EACnB,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,eAAeO,OAAOA,CAACP,MAAM,EAAC;IAC1B,IAAG;MACC,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACK,MAAM,CAAC;MACnCM,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,QAAMG,GAAG,EAAC,CAAC;EAChB;EAEAC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACM,KAAK,CAAC;EACvBF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACR,UAAU,CAACU,SAAS,CAAC;EACxD,IAAGP,IAAI,EAAC;IACJ,oBAAOR,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC/BjB,OAAA;QAAKkB,OAAO,EAAEA,CAAA,KAAMhB,MAAM,CAAC,MAAM,CAAE;QAAAe,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDtB,OAAA;QAAAiB,QAAA,EAAMT,IAAI,CAACe;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtBtB,OAAA;QAAAiB,QAAA,EAAMT,IAAI,CAACgB;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvBtB,OAAA;QAAAiB,QAAA,EAAMT,IAAI,CAACiB;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAGvBd,IAAI,CAACM,KAAK,CAACY,GAAG,CAAEC,IAAI,IAAK;QACrB,IAAGtB,UAAU,CAACU,SAAS,CAACa,QAAQ,CAACD,IAAI,CAACE,MAAM,CAAC,EAAC;UAC1C,oBAAO7B,OAAA;YAAAiB,QAAA,EAAK;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QACzB,CAAC,MAAI;UACD,oBAAOtB,OAAA;YAAAiB,QAAA,EAAK;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QACzB;MACJ,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EACV;AACJ;AAAClB,EAAA,CArCeH,WAAW;EAAA,QAEJN,WAAW;AAAA;AAAAmC,EAAA,GAFlB7B,WAAW;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}