{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nimport { store } from './store.js';\nimport { SET_CHATID, SET_CHATNAME, SET_PARTICIPANTS, SET_MANAGERS, SET_MESSAGES, SET_DESCRIPTION, SET_TYPE } from './chatReducer.js';\nexport async function creatNewChat(chat) {\n  try {\n    const newChat = await axios.post(`http://localhost:3030/api/chat`, chat);\n    return newChat.data;\n  } catch (err) {}\n}\nexport async function setChat(chatId) {\n  try {\n    const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`);\n    console.log('chat chat', chat);\n    store.dispatch({\n      type: SET_CHATID,\n      chatId: chat.data.data._id\n    });\n    store.dispatch({\n      type: SET_CHATNAME,\n      chatName: chat.data.data.name\n    });\n    store.dispatch({\n      type: SET_PARTICIPANTS,\n      participants: chat.data.data.participants\n    });\n    store.dispatch({\n      type: SET_MANAGERS,\n      managres: chat.data.data.managers\n    });\n    store.dispatch({\n      type: SET_MESSAGES,\n      massages: chat.data.data.messages\n    });\n    store.dispatch({\n      type: SET_DESCRIPTION,\n      description: chat.data.data.description\n    });\n    store.dispatch({\n      type: SET_TYPE,\n      description: chat.data.data.type\n    });\n  } catch (err) {}\n}\n\n// export async function updateChat(chat,updat){\n//     try{\n//         const updatUser = await axios.put(`http://localhost:3030/api/users/${chat}`,updat)\n//         store.dispatch({\n//             type: SET_USERCHATS,\n//             userChats: updatUser.data.user.chats\n//         })\n\n//     }catch(err){\n\n//     }\n// }\n\nexport async function findChat(chatId) {\n  try {\n    const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`);\n    return chat.data;\n  } catch (err) {\n    console.log('err', err);\n  }\n}","map":{"version":3,"names":["axios","AxiosError","store","SET_CHATID","SET_CHATNAME","SET_PARTICIPANTS","SET_MANAGERS","SET_MESSAGES","SET_DESCRIPTION","SET_TYPE","creatNewChat","chat","newChat","post","data","err","setChat","chatId","get","console","log","dispatch","type","_id","chatName","name","participants","managres","managers","massages","messages","description","findChat"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/chatActions.js"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\nimport { store } from './store.js'\r\nimport { SET_CHATID,SET_CHATNAME,SET_PARTICIPANTS,SET_MANAGERS,SET_MESSAGES,SET_DESCRIPTION,SET_TYPE } from './chatReducer.js'\r\n\r\nexport async function creatNewChat(chat){\r\n    try{\r\n        const newChat = await axios.post(`http://localhost:3030/api/chat`,chat)\r\n        return newChat.data\r\n    }catch(err){\r\n    }\r\n}\r\n\r\nexport async function setChat(chatId){\r\n    try{\r\n        const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`)\r\n        console.log('chat chat',chat)\r\n        \r\n        store.dispatch({\r\n            type: SET_CHATID,\r\n            chatId: chat.data.data._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_CHATNAME,\r\n            chatName: chat.data.data.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_PARTICIPANTS,\r\n            participants: chat.data.data.participants\r\n        })\r\n        store.dispatch({\r\n            type: SET_MANAGERS,\r\n            managres: chat.data.data.managers\r\n        })\r\n        store.dispatch({\r\n            type: SET_MESSAGES,\r\n            massages: chat.data.data.messages\r\n        })\r\n        store.dispatch({\r\n            type: SET_DESCRIPTION,\r\n            description: chat.data.data.description\r\n        })\r\n        store.dispatch({\r\n            type: SET_TYPE,\r\n            description: chat.data.data.type\r\n        })\r\n\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\n// export async function updateChat(chat,updat){\r\n//     try{\r\n//         const updatUser = await axios.put(`http://localhost:3030/api/users/${chat}`,updat)\r\n//         store.dispatch({\r\n//             type: SET_USERCHATS,\r\n//             userChats: updatUser.data.user.chats\r\n//         })\r\n\r\n//     }catch(err){\r\n\r\n//     }\r\n// }\r\n\r\nexport async function findChat(chatId) {\r\n    try{\r\n        const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`)\r\n        return chat.data\r\n    }catch(err){\r\n        console.log('err',err)\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,EAACC,YAAY,EAACC,gBAAgB,EAACC,YAAY,EAACC,YAAY,EAACC,eAAe,EAACC,QAAQ,QAAQ,kBAAkB;AAE9H,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAC;EACpC,IAAG;IACC,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,gCAAgC,EAACF,IAAI,CAAC;IACvE,OAAOC,OAAO,CAACE,IAAI;EACvB,CAAC,QAAMC,GAAG,EAAC,CACX;AACJ;AAEA,OAAO,eAAeC,OAAOA,CAACC,MAAM,EAAC;EACjC,IAAG;IACC,MAAMN,IAAI,GAAG,MAAMX,KAAK,CAACkB,GAAG,CAAC,kCAAkCD,MAAM,EAAE,CAAC;IACxEE,OAAO,CAACC,GAAG,CAAC,WAAW,EAACT,IAAI,CAAC;IAE7BT,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEnB,UAAU;MAChBc,MAAM,EAAEN,IAAI,CAACG,IAAI,CAACA,IAAI,CAACS;IAC3B,CAAC,CAAC;IACFrB,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAElB,YAAY;MAClBoB,QAAQ,EAAEb,IAAI,CAACG,IAAI,CAACA,IAAI,CAACW;IAC7B,CAAC,CAAC;IACFvB,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEjB,gBAAgB;MACtBqB,YAAY,EAAEf,IAAI,CAACG,IAAI,CAACA,IAAI,CAACY;IACjC,CAAC,CAAC;IACFxB,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEhB,YAAY;MAClBqB,QAAQ,EAAEhB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACc;IAC7B,CAAC,CAAC;IACF1B,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEf,YAAY;MAClBsB,QAAQ,EAAElB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACgB;IAC7B,CAAC,CAAC;IACF5B,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEd,eAAe;MACrBuB,WAAW,EAAEpB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACiB;IAChC,CAAC,CAAC;IACF7B,KAAK,CAACmB,QAAQ,CAAC;MACXC,IAAI,EAAEb,QAAQ;MACdsB,WAAW,EAAEpB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACQ;IAChC,CAAC,CAAC;EAGN,CAAC,QAAMP,GAAG,EAAC,CAEX;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,OAAO,eAAeiB,QAAQA,CAACf,MAAM,EAAE;EACnC,IAAG;IACC,MAAMN,IAAI,GAAG,MAAMX,KAAK,CAACkB,GAAG,CAAC,kCAAkCD,MAAM,EAAE,CAAC;IACxE,OAAON,IAAI,CAACG,IAAI;EACpB,CAAC,QAAMC,GAAG,EAAC;IACPI,OAAO,CAACC,GAAG,CAAC,KAAK,EAACL,GAAG,CAAC;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}