{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nimport { store } from './store.js';\nimport { SET_CHATID, SET_CHATNAME, SET_PARTICIPANTS, SET_MANAGERS, SET_MESSAGES, SET_DESCRIPTION } from './chatReducer.js';\nexport async function creatNewChat(chat) {\n  try {\n    const newChat = await axios.post(`http://localhost:3030/api/chat`, chat);\n    return newChat.data;\n  } catch (err) {}\n}\nexport async function setChat(chatId) {\n  try {\n    const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`);\n    store.dispatch({\n      type: SET_CHATID,\n      chatId: chat.data.data._id\n    });\n    store.dispatch({\n      type: SET_CHATNAME,\n      chatName: chat.data.data.name\n    });\n    store.dispatch({\n      type: SET_PARTICIPANTS,\n      participants: chat.data.data.participants\n    });\n    store.dispatch({\n      type: SET_MANAGERS,\n      managres: chat.data.data.managers\n    });\n    store.dispatch({\n      type: SET_MESSAGES,\n      massages: chat.data.data.messages\n    });\n    store.dispatch({\n      type: SET_DESCRIPTION,\n      description: chat.data.data.description\n    });\n  } catch (err) {}\n}\nexport async function updateChat(chat, updat) {\n  try {\n    const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`, updat);\n    store.dispatch({\n      type: SET_USERCHATS,\n      userChats: updatUser.data.user.chats\n    });\n  } catch (err) {}\n}\nexport async function findChat(chatId) {\n  try {\n    const user = await axios.get(`http://localhost:3030/api/chats/${chatId}`);\n    console.log(user.data.user);\n    return user.data.user;\n  } catch (err) {\n    console.log('err', err);\n  }\n}","map":{"version":3,"names":["axios","AxiosError","store","SET_CHATID","SET_CHATNAME","SET_PARTICIPANTS","SET_MANAGERS","SET_MESSAGES","SET_DESCRIPTION","creatNewChat","chat","newChat","post","data","err","setChat","chatId","get","dispatch","type","_id","chatName","name","participants","managres","managers","massages","messages","description","updateChat","updat","updatUser","put","user","SET_USERCHATS","userChats","chats","findChat","console","log"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/chatActions.js"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\nimport { store } from './store.js'\r\nimport { SET_CHATID,SET_CHATNAME,SET_PARTICIPANTS,SET_MANAGERS,SET_MESSAGES,SET_DESCRIPTION } from './chatReducer.js'\r\n\r\nexport async function creatNewChat(chat){\r\n    try{\r\n        const newChat = await axios.post(`http://localhost:3030/api/chat`,chat)\r\n        return newChat.data\r\n    }catch(err){\r\n    }\r\n}\r\n\r\nexport async function setChat(chatId){\r\n    try{\r\n        const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`)\r\n\r\n        store.dispatch({\r\n            type: SET_CHATID,\r\n            chatId: chat.data.data._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_CHATNAME,\r\n            chatName: chat.data.data.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_PARTICIPANTS,\r\n            participants: chat.data.data.participants\r\n        })\r\n        store.dispatch({\r\n            type: SET_MANAGERS,\r\n            managres: chat.data.data.managers\r\n        })\r\n        store.dispatch({\r\n            type: SET_MESSAGES,\r\n            massages: chat.data.data.messages\r\n        })\r\n        store.dispatch({\r\n            type: SET_DESCRIPTION,\r\n            description: chat.data.data.description\r\n        })\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport async function updateChat(chat,updat){\r\n    try{\r\n        const updatUser = await axios.put(`http://localhost:3030/api/users/${user}`,updat)\r\n        store.dispatch({\r\n            type: SET_USERCHATS,\r\n            userChats: updatUser.data.user.chats\r\n        })\r\n\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport async function findChat(chatId) {\r\n    try{\r\n        const user = await axios.get(`http://localhost:3030/api/chats/${chatId}`)\r\n        console.log(user.data.user)\r\n        return user.data.user\r\n    }catch(err){\r\n        console.log('err',err)\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,UAAU,EAACC,YAAY,EAACC,gBAAgB,EAACC,YAAY,EAACC,YAAY,EAACC,eAAe,QAAQ,kBAAkB;AAErH,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAC;EACpC,IAAG;IACC,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAACF,IAAI,CAAC;IACvE,OAAOC,OAAO,CAACE,IAAI;EACvB,CAAC,QAAMC,GAAG,EAAC,CACX;AACJ;AAEA,OAAO,eAAeC,OAAOA,CAACC,MAAM,EAAC;EACjC,IAAG;IACC,MAAMN,IAAI,GAAG,MAAMV,KAAK,CAACiB,GAAG,CAAC,kCAAkCD,MAAM,EAAE,CAAC;IAExEd,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEhB,UAAU;MAChBa,MAAM,EAAEN,IAAI,CAACG,IAAI,CAACA,IAAI,CAACO;IAC3B,CAAC,CAAC;IACFlB,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEf,YAAY;MAClBiB,QAAQ,EAAEX,IAAI,CAACG,IAAI,CAACA,IAAI,CAACS;IAC7B,CAAC,CAAC;IACFpB,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEd,gBAAgB;MACtBkB,YAAY,EAAEb,IAAI,CAACG,IAAI,CAACA,IAAI,CAACU;IACjC,CAAC,CAAC;IACFrB,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEb,YAAY;MAClBkB,QAAQ,EAAEd,IAAI,CAACG,IAAI,CAACA,IAAI,CAACY;IAC7B,CAAC,CAAC;IACFvB,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEZ,YAAY;MAClBmB,QAAQ,EAAEhB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACc;IAC7B,CAAC,CAAC;IACFzB,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEX,eAAe;MACrBoB,WAAW,EAAElB,IAAI,CAACG,IAAI,CAACA,IAAI,CAACe;IAChC,CAAC,CAAC;EAEN,CAAC,QAAMd,GAAG,EAAC,CAEX;AACJ;AAEA,OAAO,eAAee,UAAUA,CAACnB,IAAI,EAACoB,KAAK,EAAC;EACxC,IAAG;IACC,MAAMC,SAAS,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,mCAAmCC,IAAI,EAAE,EAACH,KAAK,CAAC;IAClF5B,KAAK,CAACgB,QAAQ,CAAC;MACXC,IAAI,EAAEe,aAAa;MACnBC,SAAS,EAAEJ,SAAS,CAAClB,IAAI,CAACoB,IAAI,CAACG;IACnC,CAAC,CAAC;EAEN,CAAC,QAAMtB,GAAG,EAAC,CAEX;AACJ;AAEA,OAAO,eAAeuB,QAAQA,CAACrB,MAAM,EAAE;EACnC,IAAG;IACC,MAAMiB,IAAI,GAAG,MAAMjC,KAAK,CAACiB,GAAG,CAAC,mCAAmCD,MAAM,EAAE,CAAC;IACzEsB,OAAO,CAACC,GAAG,CAACN,IAAI,CAACpB,IAAI,CAACoB,IAAI,CAAC;IAC3B,OAAOA,IAAI,CAACpB,IAAI,CAACoB,IAAI;EACzB,CAAC,QAAMnB,GAAG,EAAC;IACPwB,OAAO,CAACC,GAAG,CAAC,KAAK,EAACzB,GAAG,CAAC;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}