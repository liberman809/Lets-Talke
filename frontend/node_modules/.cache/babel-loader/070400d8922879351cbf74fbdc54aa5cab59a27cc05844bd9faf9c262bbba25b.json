{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newGroup.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { creatNewChat } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { AddUser } from './addUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewGroup({\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [groupName, setGroupName] = useState('');\n  const [description, setDescription] = useState('');\n  const [email, setEmail] = useState('');\n  const [participantsList, setParticipants] = useState([]);\n  async function searchUsser() {\n    try {\n      const user = await findUser(email);\n      setUserFound({\n        id: user._id,\n        name: user.name\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async function newGrop(e) {\n    try {\n      e.preventDefault();\n      const Ngroup = {\n        type: 'group',\n        creator: user.userId,\n        name: groupName,\n        participants: [...participantsList, user.userId],\n        managers: [user.userId],\n        description: description\n      };\n      const newChat = await creatNewChat(Ngroup);\n      const userChats = user.userChats ? user.userChats : [];\n      const updatUserChat = [...userChats, newChat.data._id];\n      const updateChats = {\n        chats: updatUserChat\n      };\n      updateUser(user.userId, updateChats);\n\n      //update members\n      participantsList.forEach(async function (participant) {\n        try {\n          const user = await findUser(participant);\n          const updatUserChat = [...userChats, newChat.data._id];\n          const updateChats = {\n            chats: updatUserChat\n          };\n          updateUser(participant, updateChats);\n        } catch (err) {\n          // console.log(err)\n        }\n      });\n      setMod('chats');\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newGroup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => newGrop(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Group description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n        participantsList: participantsList,\n        setParticipants: setParticipants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: 'Creat group'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 12\n  }, this);\n}\n_s(NewGroup, \"Mb5Hq0b8T48lksXCUdayMd9ygeE=\", false, function () {\n  return [useSelector];\n});\n_c = NewGroup;\nvar _c;\n$RefreshReg$(_c, \"NewGroup\");","map":{"version":3,"names":["useState","useSelector","findUser","creatNewChat","updateUser","AddUser","jsxDEV","_jsxDEV","NewGroup","setMod","_s","user","state","userModule","groupName","setGroupName","description","setDescription","email","setEmail","participantsList","setParticipants","searchUsser","setUserFound","id","_id","name","err","console","log","newGrop","e","preventDefault","Ngroup","type","creator","userId","participants","managers","newChat","userChats","updatUserChat","data","updateChats","chats","forEach","participant","className","children","onSubmit","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newGroup.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport{findUser} from '../store/userActions'\r\nimport {creatNewChat} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\nimport {AddUser} from './addUser'\r\n\r\nexport function NewGroup({setMod}){\r\n    const user = useSelector(state => state.userModule )\r\n\r\n    const [groupName,setGroupName] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [participantsList,setParticipants] = useState([])    \r\n\r\n\r\n\r\n\r\n    async function searchUsser() {\r\n        try{\r\n            const user = await findUser(email)\r\n            setUserFound({id:user._id,name:user.name})\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    async function newGrop(e){\r\n        try{\r\n            e.preventDefault()\r\n            const Ngroup ={\r\n                type: 'group',\r\n                creator: user.userId,\r\n                name: groupName,\r\n                participants: [...participantsList,user.userId],\r\n                managers: [user.userId],\r\n                description: description\r\n            }\r\n            const newChat =  await creatNewChat(Ngroup)\r\n    \r\n            const userChats = (user.userChats)? user.userChats: []\r\n\r\n            const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n            const updateChats = {\r\n                chats:updatUserChat\r\n            }\r\n            updateUser(user.userId,updateChats)\r\n\r\n            //update members\r\n            participantsList.forEach(async function(participant){\r\n                try{\r\n                    const user = await findUser(participant)\r\n                    const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n                    const updateChats = {\r\n                        chats:updatUserChat\r\n                    }\r\n        \r\n                    updateUser(participant,updateChats)\r\n    \r\n                }catch(err){\r\n                    // console.log(err)\r\n                }\r\n\r\n            })\r\n            setMod('chats')\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className='newGroup'>\r\n        <form onSubmit={(e) => newGrop(e)}>\r\n            <input type='text' placeholder='Group name' value={groupName} onChange={(e) => setGroupName(e.target.value)}></input>\r\n            <textarea placeholder='Group description' value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            {/* <div>look for user</div>\r\n            <input type='text' placeholder='Email' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <input type='button' value={'search'} onClick={() => searchUsser()}></input> */}\r\n            <AddUser participantsList={participantsList} setParticipants={setParticipants} />\r\n            <input type='submit' value={'Creat group'}></input>\r\n    \r\n        </form>\r\n    </div>\r\n    \r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAOC,QAAQ,QAAO,sBAAsB;AAC5C,SAAQC,YAAY,QAAO,sBAAsB;AACjD,SAAQC,UAAU,QAAO,sBAAsB;AAC/C,SAAQC,OAAO,QAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,OAAO,SAASC,QAAQA,CAAC;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAC9B,MAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAEpD,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACgB,WAAW,EAACC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACkB,KAAK,EAACC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACoB,gBAAgB,EAACC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAKvD,eAAesB,WAAWA,CAAA,EAAG;IACzB,IAAG;MACC,MAAMX,IAAI,GAAG,MAAMT,QAAQ,CAACgB,KAAK,CAAC;MAClCK,YAAY,CAAC;QAACC,EAAE,EAACb,IAAI,CAACc,GAAG;QAACC,IAAI,EAACf,IAAI,CAACe;MAAI,CAAC,CAAC;IAC9C,CAAC,QAAMC,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ;EAGA,eAAeG,OAAOA,CAACC,CAAC,EAAC;IACrB,IAAG;MACCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,MAAMC,MAAM,GAAE;QACVC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAExB,IAAI,CAACyB,MAAM;QACpBV,IAAI,EAAEZ,SAAS;QACfuB,YAAY,EAAE,CAAC,GAAGjB,gBAAgB,EAACT,IAAI,CAACyB,MAAM,CAAC;QAC/CE,QAAQ,EAAE,CAAC3B,IAAI,CAACyB,MAAM,CAAC;QACvBpB,WAAW,EAAEA;MACjB,CAAC;MACD,MAAMuB,OAAO,GAAI,MAAMpC,YAAY,CAAC8B,MAAM,CAAC;MAE3C,MAAMO,SAAS,GAAI7B,IAAI,CAAC6B,SAAS,GAAG7B,IAAI,CAAC6B,SAAS,GAAE,EAAE;MAEtD,MAAMC,aAAa,GAAG,CAAC,GAAGD,SAAS,EAAED,OAAO,CAACG,IAAI,CAACjB,GAAG,CAAC;MAEtD,MAAMkB,WAAW,GAAG;QAChBC,KAAK,EAACH;MACV,CAAC;MACDrC,UAAU,CAACO,IAAI,CAACyB,MAAM,EAACO,WAAW,CAAC;;MAEnC;MACAvB,gBAAgB,CAACyB,OAAO,CAAC,gBAAeC,WAAW,EAAC;QAChD,IAAG;UACC,MAAMnC,IAAI,GAAG,MAAMT,QAAQ,CAAC4C,WAAW,CAAC;UACxC,MAAML,aAAa,GAAG,CAAC,GAAGD,SAAS,EAAED,OAAO,CAACG,IAAI,CAACjB,GAAG,CAAC;UAEtD,MAAMkB,WAAW,GAAG;YAChBC,KAAK,EAACH;UACV,CAAC;UAEDrC,UAAU,CAAC0C,WAAW,EAACH,WAAW,CAAC;QAEvC,CAAC,QAAMhB,GAAG,EAAC;UACP;QAAA;MAGR,CAAC,CAAC;MACFlB,MAAM,CAAC,OAAO,CAAC;IAEnB,CAAC,QAAMkB,GAAG,EAAC,CAEX;EACJ;EAIA,oBAAOpB,OAAA;IAAKwC,SAAS,EAAC,UAAU;IAAAC,QAAA,eAC5BzC,OAAA;MAAM0C,QAAQ,EAAGlB,CAAC,IAAKD,OAAO,CAACC,CAAC,CAAE;MAAAiB,QAAA,gBAC9BzC,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACgB,WAAW,EAAC,YAAY;QAACC,KAAK,EAAErC,SAAU;QAACsC,QAAQ,EAAGrB,CAAC,IAAKhB,YAAY,CAACgB,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrHlD,OAAA;QAAU2C,WAAW,EAAC,mBAAmB;QAACC,KAAK,EAAEnC,WAAY;QAACoC,QAAQ,EAAGrB,CAAC,IAAKd,cAAc,CAACc,CAAC,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAIjHlD,OAAA,CAACF,OAAO;QAACe,gBAAgB,EAAEA,gBAAiB;QAACC,eAAe,EAAEA;MAAgB;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjFlD,OAAA;QAAO2B,IAAI,EAAC,QAAQ;QAACiB,KAAK,EAAE;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC/C,EAAA,CAlFeF,QAAQ;EAAA,QACPP,WAAW;AAAA;AAAAyD,EAAA,GADZlD,QAAQ;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}