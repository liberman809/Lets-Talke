{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatUserMod.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { findUser } from '../store/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatUserMod({\n  setMod,\n  userId\n}) {\n  _s();\n  const logdInUser = useSelector(state => state.userModule);\n  const [user, setUser] = useState();\n  const [logdInUserChats, setULogdInUserChats] = useState([]);\n  useEffect(() => {\n    getUser(userId);\n    getLogdInUserChats();\n  }, [userId]);\n  async function getUser(userId) {\n    try {\n      const user = await findUser(userId);\n      setUser(user);\n    } catch (err) {}\n  }\n  function getLogdInUserChats() {\n    let userChats = [];\n    for (let chat in logdInUser.userChats) {\n      userChats.push(logdInUser.userChats[chat].chatId);\n    }\n    setULogdInUserChats(userChats);\n  }\n  console.log('userLogdIn.userChats', logdInUserChats);\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUserMod\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setMod('chat'),\n        children: \"Rreturn to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(ChatUserMod, \"vVX9mnsauPDSTezsHHO6yGHnm/s=\", false, function () {\n  return [useSelector];\n});\n_c = ChatUserMod;\nvar _c;\n$RefreshReg$(_c, \"ChatUserMod\");","map":{"version":3,"names":["useSelector","useEffect","useState","findUser","jsxDEV","_jsxDEV","ChatUserMod","setMod","userId","_s","logdInUser","state","userModule","user","setUser","logdInUserChats","setULogdInUserChats","getUser","getLogdInUserChats","err","userChats","chat","push","chatId","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","email","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatUserMod.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport {findUser} from '../store/userActions'\r\n\r\n\r\nexport function ChatUserMod({setMod,userId}){\r\n    \r\n    const logdInUser = useSelector(state => state.userModule )\r\n\r\n    const [user,setUser] = useState()\r\n    const [logdInUserChats,setULogdInUserChats] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        getUser(userId)\r\n        getLogdInUserChats()\r\n    },[userId])\r\n\r\n    async function getUser(userId){\r\n        try{\r\n            const user = await findUser(userId)\r\n            setUser(user)\r\n        }catch(err){}\r\n    }\r\n\r\n    function getLogdInUserChats(){\r\n        let userChats = []\r\n        for(let chat in logdInUser.userChats){\r\n            userChats.push(logdInUser.userChats[chat].chatId)\r\n        }\r\n        setULogdInUserChats(userChats)\r\n    }\r\n\r\n    console.log('userLogdIn.userChats',logdInUserChats)\r\n    if(user){\r\n        return <div className=\"chatUserMod\">\r\n            <div onClick={() => setMod('chat')}>Rreturn to chat</div>\r\n            <div>{user.name}</div>\r\n            <div>{user.email}</div>\r\n            <div>{user.createdAt}</div>\r\n\r\n            {/* {\r\n                user.chats.map((chat) => {\r\n                    if(logdInUserChats.userChats.includes(chat.chatId)){\r\n                        return <div>'a'</div>\r\n                    }else{\r\n                        return <div>'b'</div>\r\n                    }\r\n                })\r\n            } */}\r\n        </div>\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAAQC,QAAQ,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG7C,OAAO,SAASC,WAAWA,CAAC;EAACC,MAAM;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAExC,MAAMC,UAAU,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAE1D,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EACjC,MAAM,CAACa,eAAe,EAACC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAG1DD,SAAS,CAAC,MAAK;IACXgB,OAAO,CAACT,MAAM,CAAC;IACfU,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAC,CAACV,MAAM,CAAC,CAAC;EAEX,eAAeS,OAAOA,CAACT,MAAM,EAAC;IAC1B,IAAG;MACC,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACK,MAAM,CAAC;MACnCM,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC,QAAMM,GAAG,EAAC,CAAC;EAChB;EAEA,SAASD,kBAAkBA,CAAA,EAAE;IACzB,IAAIE,SAAS,GAAG,EAAE;IAClB,KAAI,IAAIC,IAAI,IAAIX,UAAU,CAACU,SAAS,EAAC;MACjCA,SAAS,CAACE,IAAI,CAACZ,UAAU,CAACU,SAAS,CAACC,IAAI,CAAC,CAACE,MAAM,CAAC;IACrD;IACAP,mBAAmB,CAACI,SAAS,CAAC;EAClC;EAEAI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACV,eAAe,CAAC;EACnD,IAAGF,IAAI,EAAC;IACJ,oBAAOR,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC/BtB,OAAA;QAAKuB,OAAO,EAAEA,CAAA,KAAMrB,MAAM,CAAC,MAAM,CAAE;QAAAoB,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzD3B,OAAA;QAAAsB,QAAA,EAAMd,IAAI,CAACoB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtB3B,OAAA;QAAAsB,QAAA,EAAMd,IAAI,CAACqB;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvB3B,OAAA;QAAAsB,QAAA,EAAMd,IAAI,CAACsB;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAW1B,CAAC;EACV;AACJ;AAACvB,EAAA,CA/CeH,WAAW;EAAA,QAEJN,WAAW;AAAA;AAAAoC,EAAA,GAFlB9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}