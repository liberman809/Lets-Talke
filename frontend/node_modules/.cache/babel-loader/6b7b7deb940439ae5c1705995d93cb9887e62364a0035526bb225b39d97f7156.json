{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\message.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { findMessage } from '../store/massageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Message({\n  messageId\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    getMessage(messageId);\n  }, [messageId]);\n  async function getMessage(messageId) {\n    try {\n      const message = await findMessage(messageId);\n      setMessage(message.data);\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: message.fontcolorm == user.userId ? 'myMessage' : 'message',\n    children: message.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_s(Message, \"OstqcBbxqeJZLj2NoK//sPf+c88=\", true);\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["useEffect","useState","findMessage","jsxDEV","_jsxDEV","Message","messageId","_s","user","useSelector","state","userModule","message","setMessage","getMessage","data","err","className","fontcolorm","userId","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/message.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport {findMessage} from '../store/massageActions'\r\n\r\nexport function Message({messageId}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n\r\n    const [message,setMessage] = useState('')\r\n\r\n    useEffect(() =>{\r\n        getMessage(messageId)\r\n    },[messageId])\r\n\r\n    async function getMessage(messageId){\r\n        try{\r\n            const message = await findMessage(messageId)\r\n            setMessage(message.data)\r\n        }catch(err){}\r\n    }\r\n\r\n    return <div className={(message.fontcolorm == user.userId)? 'myMessage': 'message'}>\r\n        {message.text}\r\n    </div>\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,WAAW,QAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,SAASC,OAAOA,CAAC;EAACC;AAAS,CAAC,EAAC;EAAAC,EAAA;EAEhC,MAAMC,IAAI,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAEpD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEzCD,SAAS,CAAC,MAAK;IACXc,UAAU,CAACR,SAAS,CAAC;EACzB,CAAC,EAAC,CAACA,SAAS,CAAC,CAAC;EAEd,eAAeQ,UAAUA,CAACR,SAAS,EAAC;IAChC,IAAG;MACC,MAAMM,OAAO,GAAG,MAAMV,WAAW,CAACI,SAAS,CAAC;MAC5CO,UAAU,CAACD,OAAO,CAACG,IAAI,CAAC;IAC5B,CAAC,QAAMC,GAAG,EAAC,CAAC;EAChB;EAEA,oBAAOZ,OAAA;IAAKa,SAAS,EAAGL,OAAO,CAACM,UAAU,IAAIV,IAAI,CAACW,MAAM,GAAG,WAAW,GAAE,SAAU;IAAAC,QAAA,EAC9ER,OAAO,CAACS;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AACV;AAAClB,EAAA,CApBeF,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}