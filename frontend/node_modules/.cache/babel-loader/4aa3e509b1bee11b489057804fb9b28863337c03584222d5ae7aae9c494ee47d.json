{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\newChat.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { findUser } from '../store/userActions';\nimport { creatNewChat } from '../store/chatActions';\nimport { updateUser } from '../store/userActions';\nimport { AddUser } from './addUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewChat({\n  setMod\n}) {\n  _s();\n  const user = useSelector(state => state.userModule);\n  async function newChat(e) {\n    try {\n      e.preventDefault();\n      const Ngroup = {\n        type: 'group',\n        creator: user.userId,\n        name: groupName,\n        participants: [...participantsList, user.userId],\n        managers: [user.userId],\n        description: description\n      };\n      const newChat = await creatNewChat(Ngroup);\n      const userChats = user.userChats ? user.userChats : [];\n      const updatUserChat = [...userChats, newChat.data._id];\n      const updateChats = {\n        chats: updatUserChat\n      };\n      updateUser(user.userId, updateChats);\n\n      //update members\n      participantsList.forEach(async function (participant) {\n        try {\n          const user = await findUser(participant);\n          const updatUserChat = [...userChats, newChat.data._id];\n          const updateChats = {\n            chats: updatUserChat\n          };\n          updateUser(participant, updateChats);\n        } catch (err) {\n          // console.log(err)\n        }\n      });\n      setMod('chats');\n    } catch (err) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newChat\",\n    children: \"newChat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n_s(NewChat, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = NewChat;\nvar _c;\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"names":["useState","useSelector","findUser","creatNewChat","updateUser","AddUser","jsxDEV","_jsxDEV","NewChat","setMod","_s","user","state","userModule","newChat","e","preventDefault","Ngroup","type","creator","userId","name","groupName","participants","participantsList","managers","description","userChats","updatUserChat","data","_id","updateChats","chats","forEach","participant","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/newChat.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport{findUser} from '../store/userActions'\r\nimport {creatNewChat} from '../store/chatActions'\r\nimport {updateUser} from '../store/userActions'\r\nimport {AddUser} from './addUser'\r\n\r\n\r\nexport function NewChat({setMod}){\r\n\r\n    const user = useSelector(state => state.userModule )\r\n\r\n\r\n    async function newChat(e){\r\n        try{\r\n            e.preventDefault()\r\n            const Ngroup ={\r\n                type: 'group',\r\n                creator: user.userId,\r\n                name: groupName,\r\n                participants: [...participantsList,user.userId],\r\n                managers: [user.userId],\r\n                description: description\r\n            }\r\n            const newChat =  await creatNewChat(Ngroup)\r\n    \r\n            const userChats = (user.userChats)? user.userChats: []\r\n\r\n            const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n            const updateChats = {\r\n                chats:updatUserChat\r\n            }\r\n            updateUser(user.userId,updateChats)\r\n\r\n            //update members\r\n            participantsList.forEach(async function(participant){\r\n                try{\r\n                    const user = await findUser(participant)\r\n                    const updatUserChat = [...userChats, newChat.data._id]\r\n\r\n                    const updateChats = {\r\n                        chats:updatUserChat\r\n                    }\r\n        \r\n                    updateUser(participant,updateChats)\r\n    \r\n                }catch(err){\r\n                    // console.log(err)\r\n                }\r\n\r\n            })\r\n            setMod('chats')\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return <div className=\"newChat\">\r\n        newChat\r\n    </div>\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAOC,QAAQ,QAAO,sBAAsB;AAC5C,SAAQC,YAAY,QAAO,sBAAsB;AACjD,SAAQC,UAAU,QAAO,sBAAsB;AAC/C,SAAQC,OAAO,QAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,OAAO,SAASC,OAAOA,CAAC;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAE7B,MAAMC,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,UAAW,CAAC;EAGpD,eAAeC,OAAOA,CAACC,CAAC,EAAC;IACrB,IAAG;MACCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,MAAMC,MAAM,GAAE;QACVC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAER,IAAI,CAACS,MAAM;QACpBC,IAAI,EAAEC,SAAS;QACfC,YAAY,EAAE,CAAC,GAAGC,gBAAgB,EAACb,IAAI,CAACS,MAAM,CAAC;QAC/CK,QAAQ,EAAE,CAACd,IAAI,CAACS,MAAM,CAAC;QACvBM,WAAW,EAAEA;MACjB,CAAC;MACD,MAAMZ,OAAO,GAAI,MAAMX,YAAY,CAACc,MAAM,CAAC;MAE3C,MAAMU,SAAS,GAAIhB,IAAI,CAACgB,SAAS,GAAGhB,IAAI,CAACgB,SAAS,GAAE,EAAE;MAEtD,MAAMC,aAAa,GAAG,CAAC,GAAGD,SAAS,EAAEb,OAAO,CAACe,IAAI,CAACC,GAAG,CAAC;MAEtD,MAAMC,WAAW,GAAG;QAChBC,KAAK,EAACJ;MACV,CAAC;MACDxB,UAAU,CAACO,IAAI,CAACS,MAAM,EAACW,WAAW,CAAC;;MAEnC;MACAP,gBAAgB,CAACS,OAAO,CAAC,gBAAeC,WAAW,EAAC;QAChD,IAAG;UACC,MAAMvB,IAAI,GAAG,MAAMT,QAAQ,CAACgC,WAAW,CAAC;UACxC,MAAMN,aAAa,GAAG,CAAC,GAAGD,SAAS,EAAEb,OAAO,CAACe,IAAI,CAACC,GAAG,CAAC;UAEtD,MAAMC,WAAW,GAAG;YAChBC,KAAK,EAACJ;UACV,CAAC;UAEDxB,UAAU,CAAC8B,WAAW,EAACH,WAAW,CAAC;QAEvC,CAAC,QAAMI,GAAG,EAAC;UACP;QAAA;MAGR,CAAC,CAAC;MACF1B,MAAM,CAAC,OAAO,CAAC;IAEnB,CAAC,QAAM0B,GAAG,EAAC,CAEX;EACJ;EAGA,oBAAO5B,OAAA;IAAK6B,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAEhC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACV;AAAC/B,EAAA,CAvDeF,OAAO;EAAA,QAENP,WAAW;AAAA;AAAAyC,EAAA,GAFZlC,OAAO;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}