{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\projects\\\\lets talke\\\\frontend\\\\src\\\\components\\\\chatUserMod.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { findUser } from '../store/userActions';\nimport { ChatSide } from './chatSide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatUserMod({\n  mod,\n  setMod,\n  userId\n}) {\n  _s();\n  const logdInUser = useSelector(state => state.userModule);\n  const [user, setUser] = useState();\n  const [logdInUserChats, setULogdInUserChats] = useState();\n  alert('a');\n  useEffect(() => {\n    getUser(userId);\n    getLogdInUserChats();\n  }, []);\n  async function getUser(userId) {\n    try {\n      const user = await findUser(userId);\n      setUser(user);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  function getLogdInUserChats() {\n    let userChats = [];\n    for (let chat in logdInUser.userChats) {\n      userChats.push(logdInUser.userChats[chat].chatId);\n    }\n    setULogdInUserChats(userChats);\n  }\n  if (user) {\n    const date = new Date(user.createdAt);\n    const options = {\n      dateStyle: 'long',\n      timeZone: 'Asia/Jerusalem' // אזור הזמן הרצוי\n    };\n    const localDate = date.toLocaleDateString('en-US', options);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUserMod\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setMod('chat'),\n        children: \"Rreturn to chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"user sign up in\", localDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), user.chats.map(chat => {\n        if (logdInUserChats.includes(chat.chatId)) {\n          return /*#__PURE__*/_jsxDEV(ChatSide, {\n            chat: chat,\n            setMod: setMod\n          }, chat.chatId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 32\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n}\n_s(ChatUserMod, \"ZhfMXl7OH0H7sf09wsveioPpVQs=\", false, function () {\n  return [useSelector];\n});\n_c = ChatUserMod;\nvar _c;\n$RefreshReg$(_c, \"ChatUserMod\");","map":{"version":3,"names":["useSelector","useEffect","useState","findUser","ChatSide","jsxDEV","_jsxDEV","ChatUserMod","mod","setMod","userId","_s","logdInUser","state","userModule","user","setUser","logdInUserChats","setULogdInUserChats","alert","getUser","getLogdInUserChats","err","console","log","userChats","chat","push","chatId","date","Date","createdAt","options","dateStyle","timeZone","localDate","toLocaleDateString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","email","chats","map","includes","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/components/chatUserMod.jsx"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport {findUser} from '../store/userActions'\r\nimport {ChatSide} from './chatSide'\r\n\r\nexport function ChatUserMod({mod,setMod,userId}){\r\n\r\n    \r\n    const logdInUser = useSelector(state => state.userModule )\r\n\r\n    const [user,setUser] = useState()\r\n    const [logdInUserChats,setULogdInUserChats] = useState()\r\n\r\n    alert('a')\r\n    useEffect(() =>{\r\n        getUser(userId)\r\n        getLogdInUserChats()\r\n    },[])\r\n\r\n    async function getUser(userId){\r\n        try{\r\n            const user = await findUser(userId)\r\n            setUser(user)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    function getLogdInUserChats(){\r\n        let userChats = []\r\n        for(let chat in logdInUser.userChats){\r\n            userChats.push(logdInUser.userChats[chat].chatId)\r\n        }\r\n        setULogdInUserChats(userChats)\r\n    }\r\n\r\n\r\n\r\n    if(user){\r\n        const date = new Date(user.createdAt);\r\n\r\n        const options = {\r\n            dateStyle: 'long',\r\n            timeZone: 'Asia/Jerusalem' // אזור הזמן הרצוי\r\n        };\r\n    \r\n        const localDate = date.toLocaleDateString('en-US', options);\r\n    \r\n        return <div className=\"chatUserMod\">\r\n            <div onClick={() => setMod('chat')}>Rreturn to chat</div>\r\n            <div>{user.name}</div>\r\n            <div>{user.email}</div>\r\n            <div>user sign up in{localDate}</div>\r\n\r\n            {\r\n                user.chats.map((chat) => {\r\n                    if(logdInUserChats.includes(chat.chatId)){\r\n                        return <ChatSide key={chat.chatId} chat={chat} setMod={setMod} />\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    }else{\r\n        return <div>a</div>\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}