{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage'; // מספק את האחסון המקומי (localStorage) לדפדפן\nimport { userReducer } from './userReducer';\nimport { chatReducer } from './chatReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['userModule'],\n  transforms: [encryptTransform({\n    secretKey: 'mySecretKeyLetTalke' // מפתח הצפנה (יש להחביא אותו בסביבה מאובטחת)\n  })]\n};\nconst rootReducer = combineReducers({\n  chatModule: chatReducer,\n  userModule: userReducer\n  // systemModule: systemReducer,\n  // groupModule: groupReducer,\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : undefined;\n//export const store = createStore(rootReducer, middleware)\nexport const store = createStore(persistedReducer, middleware);\nexport const persistor = persistStore(store);\n\n// store.subscribe(() => {\n//     console.log('**** Store state changed: ****')\n//     console.log('storeState:\\n', store.getState().propertieModule)\n//     console.log('*******************************')\n// })","map":{"version":3,"names":["createStore","combineReducers","storage","userReducer","chatReducer","persistStore","persistReducer","encryptTransform","persistConfig","key","whitelist","transforms","secretKey","rootReducer","chatModule","userModule","persistedReducer","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","undefined","store","persistor"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/store.js"],"sourcesContent":["\r\nimport { createStore, combineReducers } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'; // מספק את האחסון המקומי (localStorage) לדפדפן\r\nimport { userReducer } from './userReducer'\r\nimport {chatReducer} from './chatReducer'\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport {encryptTransform} from 'redux-persist-transform-encrypt';\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['userModule'],\r\n    transforms: [\r\n        encryptTransform({\r\n          secretKey: 'mySecretKeyLetTalke', // מפתח הצפנה (יש להחביא אותו בסביבה מאובטחת)\r\n        })\r\n      ],\r\n  };\r\n\r\nconst rootReducer = combineReducers({\r\n    chatModule: chatReducer,\r\n    userModule: userReducer,\r\n    // systemModule: systemReducer,\r\n    // groupModule: groupReducer,\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nconst middleware = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : undefined\r\n//export const store = createStore(rootReducer, middleware)\r\nexport const store = createStore(persistedReducer, middleware);\r\nexport const persistor = persistStore(store);\r\n\r\n// store.subscribe(() => {\r\n//     console.log('**** Store state changed: ****')\r\n//     console.log('storeState:\\n', store.getState().propertieModule)\r\n//     console.log('*******************************')\r\n// })"],"mappings":"AACA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;AACjD,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAAQC,WAAW,QAAO,eAAe;AACzC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,SAAQC,gBAAgB,QAAO,iCAAiC;AAGhE,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,SAAS,EAAE,CAAC,YAAY,CAAC;EACzBC,UAAU,EAAE,CACRJ,gBAAgB,CAAC;IACfK,SAAS,EAAE,qBAAqB,CAAE;EACpC,CAAC,CAAC;AAER,CAAC;AAEH,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAChCa,UAAU,EAAEV,WAAW;EACvBW,UAAU,EAAEZ;EACZ;EACA;AACJ,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAGV,cAAc,CAACE,aAAa,EAAEK,WAAW,CAAC;AAGnE,MAAMI,UAAU,GAAIC,MAAM,CAACC,oCAAoC,GAAGD,MAAM,CAACC,oCAAoC,CAAC,CAAC,GAAGC,SAAS;AAC3H;AACA,OAAO,MAAMC,KAAK,GAAGrB,WAAW,CAACgB,gBAAgB,EAAEC,UAAU,CAAC;AAC9D,OAAO,MAAMK,SAAS,GAAGjB,YAAY,CAACgB,KAAK,CAAC;;AAE5C;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}