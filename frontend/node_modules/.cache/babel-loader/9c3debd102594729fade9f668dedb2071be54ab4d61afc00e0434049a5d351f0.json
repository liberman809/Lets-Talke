{"ast":null,"code":"import axios, { AxiosError } from 'axios';\nimport { store } from './store.js';\nimport { SET_CHATID, SET_CHATNAME, SET_PARTICIPANTS, SET_MANAGERS, SET_MESSAGES, SET_DESCRIPTION, SET_TYPE, SET_FOUNDER } from './chatReducer.js';\nexport async function creatNewChat(chat) {\n  try {\n    const newChat = await axios.post(`http://localhost:3030/api/chat`, chat);\n    return newChat.data;\n  } catch (err) {}\n}\nexport async function setChat(chatId) {\n  try {\n    const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`);\n    store.dispatch({\n      type: SET_CHATID,\n      chatId: chat.data.data._id\n    });\n    store.dispatch({\n      type: SET_CHATNAME,\n      chatName: chat.data.data.name\n    });\n    store.dispatch({\n      type: SET_PARTICIPANTS,\n      participants: chat.data.data.participants\n    });\n    store.dispatch({\n      type: SET_MANAGERS,\n      managers: chat.data.data.managers\n    });\n    store.dispatch({\n      type: SET_MESSAGES,\n      messages: chat.data.data.messages\n    });\n    store.dispatch({\n      type: SET_DESCRIPTION,\n      description: chat.data.data.description\n    });\n    store.dispatch({\n      type: SET_TYPE,\n      chatType: chat.data.data.type\n    });\n    store.dispatch({\n      type: SET_FOUNDER,\n      founder: chat.data.data.creator\n    });\n  } catch (err) {}\n}\n\n// export async function updateChat(chat,updat){\n//     try{\n//         const updatUser = await axios.put(`http://localhost:3030/api/users/${chat}`,updat)\n//         store.dispatch({\n//             type: SET_USERCHATS,\n//             userChats: updatUser.data.user.chats\n//         })\n\n//     }catch(err){\n\n//     }\n// }\n\nexport async function findChat(chatId) {\n  try {\n    const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`);\n    return chat.data;\n  } catch (err) {\n    console.log('err', err);\n  }\n}\nexport async function updateChat(chat, updates) {\n  try {\n    const updatChat = await axios.put(`http://localhost:3030/api/chat/${chat}`, updates);\n    setChat(chat);\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function resetGroup() {\n  store.dispatch({\n    type: SET_CHATID,\n    chatId: null\n  });\n  store.dispatch({\n    type: SET_CHATNAME,\n    chatName: null\n  });\n  store.dispatch({\n    type: SET_PARTICIPANTS,\n    participants: null\n  });\n  store.dispatch({\n    type: SET_MANAGERS,\n    managers: null\n  });\n  store.dispatch({\n    type: SET_MESSAGES,\n    messages: null\n  });\n  store.dispatch({\n    type: SET_DESCRIPTION,\n    description: null\n  });\n  store.dispatch({\n    type: SET_TYPE,\n    chatType: null\n  });\n  store.dispatch({\n    type: SET_FOUNDER,\n    founder: null\n  });\n}","map":{"version":3,"names":["axios","AxiosError","store","SET_CHATID","SET_CHATNAME","SET_PARTICIPANTS","SET_MANAGERS","SET_MESSAGES","SET_DESCRIPTION","SET_TYPE","SET_FOUNDER","creatNewChat","chat","newChat","post","data","err","setChat","chatId","get","dispatch","type","_id","chatName","name","participants","managers","messages","description","chatType","founder","creator","findChat","console","log","updateChat","updates","updatChat","put","resetGroup"],"sources":["C:/Users/ASUS/Desktop/projects/lets talke/frontend/src/store/chatActions.js"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\nimport { store } from './store.js'\r\nimport { SET_CHATID,SET_CHATNAME,SET_PARTICIPANTS,SET_MANAGERS,SET_MESSAGES,SET_DESCRIPTION,SET_TYPE,SET_FOUNDER } from './chatReducer.js'\r\n\r\nexport async function creatNewChat(chat){\r\n    try{\r\n        const newChat = await axios.post(`http://localhost:3030/api/chat`,chat)\r\n        return newChat.data\r\n    }catch(err){\r\n    }\r\n}\r\n\r\nexport async function setChat(chatId){\r\n    try{\r\n        const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`)\r\n\r\n        \r\n        store.dispatch({\r\n            type: SET_CHATID,\r\n            chatId: chat.data.data._id\r\n        })\r\n        store.dispatch({\r\n            type: SET_CHATNAME,\r\n            chatName: chat.data.data.name\r\n        })\r\n        store.dispatch({\r\n            type: SET_PARTICIPANTS,\r\n            participants: chat.data.data.participants\r\n        })\r\n        store.dispatch({\r\n            type: SET_MANAGERS,\r\n            managers: chat.data.data.managers\r\n        })\r\n        store.dispatch({\r\n            type: SET_MESSAGES,\r\n            messages: chat.data.data.messages\r\n        })\r\n        store.dispatch({\r\n            type: SET_DESCRIPTION,\r\n            description: chat.data.data.description\r\n        })\r\n        store.dispatch({\r\n            type: SET_TYPE,\r\n            chatType: chat.data.data.type\r\n        })\r\n        store.dispatch({\r\n            type: SET_FOUNDER,\r\n            founder: chat.data.data.creator\r\n\r\n        })\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\n// export async function updateChat(chat,updat){\r\n//     try{\r\n//         const updatUser = await axios.put(`http://localhost:3030/api/users/${chat}`,updat)\r\n//         store.dispatch({\r\n//             type: SET_USERCHATS,\r\n//             userChats: updatUser.data.user.chats\r\n//         })\r\n\r\n//     }catch(err){\r\n\r\n//     }\r\n// }\r\n\r\nexport async function findChat(chatId) {\r\n    try{\r\n        const chat = await axios.get(`http://localhost:3030/api/chat/${chatId}`)\r\n        return chat.data\r\n    }catch(err){\r\n        console.log('err',err)\r\n    }\r\n}\r\n\r\nexport async function updateChat(chat,updates){\r\n    try{\r\n        const updatChat = await axios.put(`http://localhost:3030/api/chat/${chat}`,updates)\r\n        setChat(chat)\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function resetGroup(){\r\n    store.dispatch({\r\n        type: SET_CHATID,\r\n        chatId: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_CHATNAME,\r\n        chatName: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_PARTICIPANTS,\r\n        participants: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_MANAGERS,\r\n        managers: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_MESSAGES,\r\n        messages: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_DESCRIPTION,\r\n        description: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_TYPE,\r\n        chatType: null\r\n    })\r\n    store.dispatch({\r\n        type: SET_FOUNDER,\r\n        founder: null\r\n\r\n    })\r\n}\r\n \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}